

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 21 18:10:51 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 1.41
    40                           ; Generated 25/01/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  001528                     __pidataCOMRAM:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _LCD_01_ADDRESS
    79  001528  27                 	db	39
    80                           
    81                           	psect	smallconst
    82  000800                     __psmallconst:
    83                           	opt stack 0
    84  000800  00                 	db	0
    85  000801                     _dpowers:
    86                           	opt stack 0
    87  000801  0001               	dw	1
    88  000803  0000               	dw	0
    89  000805  000A               	dw	10
    90  000807  0000               	dw	0
    91  000809  0064               	dw	100
    92  00080B  0000               	dw	0
    93  00080D  03E8               	dw	1000
    94  00080F  0000               	dw	0
    95  000811  2710               	dw	10000
    96  000813  0000               	dw	0
    97  000815  86A0               	dw	34464
    98  000817  0001               	dw	1
    99  000819  4240               	dw	16960
   100  00081B  000F               	dw	15
   101  00081D  9680               	dw	38528
   102  00081F  0098               	dw	152
   103  000821  E100               	dw	57600
   104  000823  05F5               	dw	1525
   105  000825  CA00               	dw	51712
   106  000827  3B9A               	dw	15258
   107  000829                     __end_of_dpowers:
   108                           	opt stack 0
   109  0000                     _SSPSTATbits	set	4039
   110  0000                     _PIR1bits	set	3998
   111  0000                     _TRISBbits	set	3987
   112  0000                     _SSPCON2	set	4037
   113  0000                     _SSPCON1	set	4038
   114  0000                     _SSPSTAT	set	4039
   115  0000                     _OSCCON	set	4051
   116  0000                     _SSPCON1bits	set	4038
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSPCON2bits	set	4037
   119  0000                     _PORTDbits	set	3971
   120  0000                     _LATD	set	3980
   121  0000                     _TRISD	set	3989
   122  000829                     STR_6:
   123  000829  70                 	db	112	;'p'
   124  00082A  61                 	db	97	;'a'
   125  00082B  64                 	db	100	;'d'
   126  00082C  72                 	db	114	;'r'
   127  00082D  65                 	db	101	;'e'
   128  00082E  73                 	db	115	;'s'
   129  00082F  20                 	db	32
   130  000830  68                 	db	104	;'h'
   131  000831  69                 	db	105	;'i'
   132  000832  70                 	db	112	;'p'
   133  000833  65                 	db	101	;'e'
   134  000834  72                 	db	114	;'r'
   135  000835  3F                 	db	63	;'?'
   136  000836  20                 	db	32
   137  000837  6E                 	db	110	;'n'
   138  000838  6F                 	db	111	;'o'
   139  000839  20                 	db	32
   140  00083A  30                 	db	48	;'0'
   141  00083B  20                 	db	32
   142  00083C  20                 	db	32
   143  00083D  73                 	db	115	;'s'
   144  00083E  69                 	db	105	;'i'
   145  00083F  20                 	db	32
   146  000840  20                 	db	32
   147  000841  31                 	db	49	;'1'
   148  000842  20                 	db	32
   149  000843  00                 	db	0
   150  000844                     STR_7:
   151  000844  25                 	db	37
   152  000845  6C                 	db	108	;'l'
   153  000846  75                 	db	117	;'u'
   154  000847  2C                 	db	44
   155  000848  25                 	db	37
   156  000849  6C                 	db	108	;'l'
   157  00084A  75                 	db	117	;'u'
   158  00084B  2C                 	db	44
   159  00084C  25                 	db	37
   160  00084D  6C                 	db	108	;'l'
   161  00084E  75                 	db	117	;'u'
   162  00084F  2C                 	db	44
   163  000850  25                 	db	37
   164  000851  6C                 	db	108	;'l'
   165  000852  75                 	db	117	;'u'
   166  000853  2C                 	db	44
   167  000854  25                 	db	37
   168  000855  6C                 	db	108	;'l'
   169  000856  75                 	db	117	;'u'
   170  000857  2C                 	db	44
   171  000858  25                 	db	37
   172  000859  6C                 	db	108	;'l'
   173  00085A  75                 	db	117	;'u'
   174  00085B  00                 	db	0
   175  00085C                     STR_3:
   176  00085C  54                 	db	84	;'T'
   177  00085D  65                 	db	101	;'e'
   178  00085E  63                 	db	99	;'c'
   179  00085F  6C                 	db	108	;'l'
   180  000860  65                 	db	101	;'e'
   181  000861  65                 	db	101	;'e'
   182  000862  20                 	db	32
   183  000863  65                 	db	101	;'e'
   184  000864  73                 	db	115	;'s'
   185  000865  74                 	db	116	;'t'
   186  000866  61                 	db	97	;'a'
   187  000867  74                 	db	116	;'t'
   188  000868  75                 	db	117	;'u'
   189  000869  72                 	db	114	;'r'
   190  00086A  61                 	db	97	;'a'
   191  00086B  28                 	db	40
   192  00086C  63                 	db	99	;'c'
   193  00086D  6D                 	db	109	;'m'
   194  00086E  29                 	db	41
   195  00086F  00                 	db	0
   196  000870                     STR_2:
   197  000870  54                 	db	84	;'T'
   198  000871  65                 	db	101	;'e'
   199  000872  63                 	db	99	;'c'
   200  000873  6C                 	db	108	;'l'
   201  000874  65                 	db	101	;'e'
   202  000875  65                 	db	101	;'e'
   203  000876  20                 	db	32
   204  000877  70                 	db	112	;'p'
   205  000878  65                 	db	101	;'e'
   206  000879  73                 	db	115	;'s'
   207  00087A  6F                 	db	111	;'o'
   208  00087B  20                 	db	32
   209  00087C  65                 	db	101	;'e'
   210  00087D  6E                 	db	110	;'n'
   211  00087E  20                 	db	32
   212  00087F  6B                 	db	107	;'k'
   213  000880  67                 	db	103	;'g'
   214  000881  00                 	db	0
   215  000882                     STR_5:
   216  000882  46                 	db	70	;'F'
   217  000883  75                 	db	117	;'u'
   218  000884  6D                 	db	109	;'m'
   219  000885  61                 	db	97	;'a'
   220  000886  3F                 	db	63	;'?'
   221  000887  20                 	db	32
   222  000888  6E                 	db	110	;'n'
   223  000889  6F                 	db	111	;'o'
   224  00088A  20                 	db	32
   225  00088B  30                 	db	48	;'0'
   226  00088C  20                 	db	32
   227  00088D  73                 	db	115	;'s'
   228  00088E  69                 	db	105	;'i'
   229  00088F  20                 	db	32
   230  000890  31                 	db	49	;'1'
   231  000891  00                 	db	0
   232  000892                     STR_4:
   233  000892  67                 	db	103	;'g'
   234  000893  65                 	db	101	;'e'
   235  000894  6E                 	db	110	;'n'
   236  000895  65                 	db	101	;'e'
   237  000896  72                 	db	114	;'r'
   238  000897  6F                 	db	111	;'o'
   239  000898  20                 	db	32
   240  000899  30                 	db	48	;'0'
   241  00089A  20                 	db	32
   242  00089B  48                 	db	72	;'H'
   243  00089C  20                 	db	32
   244  00089D  31                 	db	49	;'1'
   245  00089E  20                 	db	32
   246  00089F  4D                 	db	77	;'M'
   247  0008A0  00                 	db	0
   248  0008A1                     STR_1:
   249  0008A1  54                 	db	84	;'T'
   250  0008A2  65                 	db	101	;'e'
   251  0008A3  63                 	db	99	;'c'
   252  0008A4  6C                 	db	108	;'l'
   253  0008A5  65                 	db	101	;'e'
   254  0008A6  65                 	db	101	;'e'
   255  0008A7  20                 	db	32
   256  0008A8  65                 	db	101	;'e'
   257  0008A9  64                 	db	100	;'d'
   258  0008AA  61                 	db	97	;'a'
   259  0008AB  64                 	db	100	;'d'
   260  0008AC  00                 	db	0
   261                           
   262                           ; #config settings
   263  0008AD  00                 	db	0	; dummy byte at the end
   264  0000                     
   265                           	psect	cinit
   266  00144E                     __pcinit:
   267                           	opt stack 0
   268  00144E                     start_initialization:
   269                           	opt stack 0
   270  00144E                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Initialize objects allocated to COMRAM (1 bytes)
   274                           ; load TBLPTR registers with __pidataCOMRAM
   275  00144E  0E28               	movlw	low __pidataCOMRAM
   276  001450  6EF6               	movwf	tblptrl,c
   277  001452  0E15               	movlw	high __pidataCOMRAM
   278  001454  6EF7               	movwf	tblptrh,c
   279  001456  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   280  001458  6EF8               	movwf	tblptru,c
   281  00145A  0009               	tblrd		*+	;fetch initializer
   282  00145C  CFF5 F043          	movff	tablat,__pdataCOMRAM
   283                           
   284                           ; Clear objects allocated to BANK1 (80 bytes)
   285  001460  EE01  F000         	lfsr	0,__pbssBANK1
   286  001464  0E50               	movlw	80
   287  001466                     clear_0:
   288  001466  6AEE               	clrf	postinc0,c
   289  001468  06E8               	decf	wreg,f,c
   290  00146A  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to COMRAM (2 bytes)
   293  00146C  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   294  00146E  6A41               	clrf	__pbssCOMRAM& (0+255),c
   295  001470                     end_of_initialization:
   296                           	opt stack 0
   297  001470                     __end_of__initialization:
   298                           	opt stack 0
   299  001470  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300  001472  6EF8               	movwf	tblptru,c
   301  001474  0100               	movlb	0
   302  001476  EFED  F009         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	bssCOMRAM
   311  000041                     __pbssCOMRAM:
   312                           	opt stack 0
   313  000041                     _keynum:
   314                           	opt stack 0
   315  000041                     	ds	2
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	dataCOMRAM
   324  000043                     __pdataCOMRAM:
   325                           	opt stack 0
   326  000043                     _LCD_01_ADDRESS:
   327                           	opt stack 0
   328  000043                     	ds	1
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336                           	psect	bssBANK1
   337  000100                     __pbssBANK1:
   338                           	opt stack 0
   339  000100                     _text:
   340                           	opt stack 0
   341  000100                     	ds	80
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           
   349                           	psect	cstackBANK0
   350  000060                     __pcstackBANK0:
   351                           	opt stack 0
   352  000060                     riksFactors@text:
   353                           	opt stack 0
   354                           
   355                           ; 80 bytes @ 0x0
   356  000060                     	ds	80
   357  0000B0                     riksFactors@systolic:
   358                           	opt stack 0
   359                           
   360                           ; 4 bytes @ 0x50
   361  0000B0                     	ds	4
   362  0000B4                     riksFactors@diastolic:
   363                           	opt stack 0
   364                           
   365                           ; 4 bytes @ 0x54
   366  0000B4                     	ds	4
   367  0000B8                     riksFactors@edad:
   368                           	opt stack 0
   369                           
   370                           ; 4 bytes @ 0x58
   371  0000B8                     	ds	4
   372  0000BC                     riksFactors@estatura:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x5C
   376  0000BC                     	ds	4
   377  0000C0                     riksFactors@peso:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x60
   381  0000C0                     	ds	4
   382  0000C4                     riksFactors@gender:
   383                           	opt stack 0
   384                           
   385                           ; 4 bytes @ 0x64
   386  0000C4                     	ds	4
   387  0000C8                     riksFactors@smoke:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x68
   391  0000C8                     	ds	4
   392  0000CC                     riksFactors@parents:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x6C
   396  0000CC                     	ds	4
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404                           	psect	cstackCOMRAM
   405  000001                     __pcstackCOMRAM:
   406                           	opt stack 0
   407  000001                     ??_IdleI2C:
   408  000001                     ??_isdigit:
   409  000001                     ?_KP_scan:
   410                           	opt stack 0
   411  000001                     ?___wmul:
   412                           	opt stack 0
   413  000001                     ?___lldiv:
   414                           	opt stack 0
   415  000001                     OpenI2C@slew:
   416                           	opt stack 0
   417  000001                     longDelay@time:
   418                           	opt stack 0
   419  000001                     ___wmul@multiplier:
   420                           	opt stack 0
   421  000001                     ___lldiv@dividend:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x0
   425  000001                     	ds	1
   426  000002                     OpenI2C@sync_mode:
   427                           	opt stack 0
   428  000002                     WriteI2C@data_out:
   429                           	opt stack 0
   430  000002                     _isdigit$833:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434  000002                     	ds	1
   435  000003                     ??_KP_scan:
   436  000003                     ??_longDelay:
   437  000003                     I2C_PCF8574_Write@value:
   438                           	opt stack 0
   439  000003                     isdigit@c:
   440                           	opt stack 0
   441  000003                     ___wmul@multiplicand:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x2
   445  000003                     	ds	1
   446  000004                     I2C_PCF8574_Write@dummy:
   447                           	opt stack 0
   448  000004                     longDelay@i:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x3
   452  000004                     	ds	1
   453  000005                     I2C_PCF8574_Write@S:
   454                           	opt stack 0
   455  000005                     KP_scan@press:
   456                           	opt stack 0
   457  000005                     ___wmul@product:
   458                           	opt stack 0
   459  000005                     ___lldiv@divisor:
   460                           	opt stack 0
   461                           
   462                           ; 4 bytes @ 0x4
   463  000005                     	ds	1
   464  000006                     I2C_PCF8574_Write@addr:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  000006                     	ds	1
   469  000007                     ?_atoi:
   470                           	opt stack 0
   471  000007                     LCD_putcmd@data:
   472                           	opt stack 0
   473  000007                     LCD_putch@data:
   474                           	opt stack 0
   475  000007                     KP_scan@row:
   476                           	opt stack 0
   477  000007                     atoi@s:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x6
   481  000007                     	ds	1
   482  000008                     LCD_putcmd@cmdtype:
   483                           	opt stack 0
   484  000008                     LCD_putch@addr:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x7
   488  000008                     	ds	1
   489  000009                     ??_atoi:
   490  000009                     ??_LCD_putcmd:
   491  000009                     KP_Readbutton@key:
   492                           	opt stack 0
   493  000009                     LCD_putch@lcddata:
   494                           	opt stack 0
   495  000009                     ___lldiv@quotient:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x8
   499  000009                     	ds	1
   500  00000A                     LCD_putcmd@addr:
   501                           	opt stack 0
   502  00000A                     LCD_puts@s:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x9
   506  00000A                     	ds	1
   507  00000B                     LCD_putcmd@lcddata:
   508                           	opt stack 0
   509  00000B                     atoi@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0xA
   513  00000B                     	ds	1
   514  00000C                     ??_LCD_init:
   515  00000C                     LCD_goto@row:
   516                           	opt stack 0
   517  00000C                     LCD_puts@i:
   518                           	opt stack 0
   519  00000C                     atoi@a:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0xB
   523  00000C                     	ds	1
   524  00000D                     LCD_init@addr:
   525                           	opt stack 0
   526  00000D                     LCD_goto@column:
   527                           	opt stack 0
   528  00000D                     ___lldiv@counter:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xC
   532  00000D                     	ds	1
   533  00000E                     ?___llmod:
   534                           	opt stack 0
   535  00000E                     LCD_goto@addr:
   536                           	opt stack 0
   537  00000E                     LCD_puts@addr:
   538                           	opt stack 0
   539  00000E                     ___llmod@dividend:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0xD
   543  00000E                     	ds	1
   544  00000F                     ?_keyNumber:
   545                           	opt stack 0
   546                           
   547                           ; 4 bytes @ 0xE
   548  00000F                     	ds	3
   549  000012                     ___llmod@divisor:
   550                           	opt stack 0
   551                           
   552                           ; 4 bytes @ 0x11
   553  000012                     	ds	1
   554  000013                     keyNumber@arreglo:
   555                           	opt stack 0
   556                           
   557                           ; 20 bytes @ 0x12
   558  000013                     	ds	3
   559  000016                     ___llmod@counter:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x15
   563  000016                     	ds	1
   564  000017                     ?_sprintf:
   565                           	opt stack 0
   566  000017                     sprintf@sp:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x16
   570  000017                     	ds	2
   571  000019                     sprintf@f:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x18
   575  000019                     	ds	14
   576  000027                     keyNumber@number:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0x26
   580  000027                     	ds	4
   581  00002B                     keyNumber@contador:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x2A
   585  00002B                     	ds	2
   586  00002D                     keyNumber@tecla:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x2C
   590  00002D                     	ds	1
   591  00002E                     keyNumber@i:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x2D
   595  00002E                     	ds	5
   596  000033                     ??_sprintf:
   597                           
   598                           ; 1 bytes @ 0x32
   599  000033                     	ds	2
   600  000035                     sprintf@flag:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x34
   604  000035                     	ds	1
   605  000036                     sprintf@prec:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x35
   609  000036                     	ds	2
   610  000038                     sprintf@val:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0x37
   614  000038                     	ds	4
   615  00003C                     sprintf@ap:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x3B
   619  00003C                     	ds	2
   620  00003E                     sprintf@c:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x3D
   624  00003E                     	ds	1
   625  00003F                     main@counter:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x3E
   629  00003F                     	ds	2
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 22 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  counter         2   62[COMRAM] unsigned int 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   656 ;;      Params:         0       0       0       0       0       0       0       0       0
   657 ;;      Locals:         2       0       0       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels required when called:    7
   662 ;; This function calls:
   663 ;;		_KP_init
   664 ;;		_LCD_init
   665 ;;		_LCD_putcmd
   666 ;;		_OpenI2C
   667 ;;		_longDelay
   668 ;;		_riksFactors
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text0
   675  0013DA                     __ptext0:
   676                           	opt stack 0
   677  0013DA                     _main:
   678                           	opt stack 24
   679                           
   680                           ;main.c: 25: OSCCON = 0b01101000;
   681                           
   682                           ;incstack = 0
   683  0013DA  0E68               	movlw	104
   684  0013DC  6ED3               	movwf	4051,c	;volatile
   685                           
   686                           ;main.c: 27: OpenI2C(0b00001000, 0b10000000);
   687  0013DE  0E80               	movlw	128
   688  0013E0  6E01               	movwf	OpenI2C@slew,c
   689  0013E2  0E08               	movlw	8
   690  0013E4  EC6F  F00A         	call	_OpenI2C
   691                           
   692                           ;main.c: 28: LCD_init(LCD_01_ADDRESS);
   693  0013E8  5043               	movf	_LCD_01_ADDRESS,w,c
   694  0013EA  EC3C  F008         	call	_LCD_init
   695                           
   696                           ;main.c: 29: KP_init();
   697  0013EE  EC8F  F00A         	call	_KP_init	;wreg free
   698                           
   699                           ;main.c: 37: unsigned int counter = 0;
   700  0013F2  0E00               	movlw	0
   701  0013F4  6E40               	movwf	main@counter+1,c
   702  0013F6  0E00               	movlw	0
   703  0013F8  6E3F               	movwf	main@counter,c
   704                           
   705                           ;main.c: 38: LCD_putcmd(LCD_01_ADDRESS, 0x01,1);
   706  0013FA  0E01               	movlw	1
   707  0013FC  6E07               	movwf	LCD_putcmd@data,c
   708  0013FE  0E01               	movlw	1
   709  001400  6E08               	movwf	LCD_putcmd@cmdtype,c
   710  001402  5043               	movf	_LCD_01_ADDRESS,w,c
   711  001404  EC9D  F009         	call	_LCD_putcmd
   712  001408                     l2009:
   713                           
   714                           ;main.c: 42: riksFactors();
   715  001408  EC57  F004         	call	_riksFactors	;wreg free
   716                           
   717                           ;main.c: 53: longDelay(10);
   718  00140C  0E00               	movlw	0
   719  00140E  6E02               	movwf	longDelay@time+1,c
   720  001410  0E0A               	movlw	10
   721  001412  6E01               	movwf	longDelay@time,c
   722  001414  EC0D  F00A         	call	_longDelay	;wreg free
   723  001418  D7F7               	goto	l2009
   724  00141A                     __end_of_main:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           
   733 ;; *************** function _riksFactors *****************
   734 ;; Defined at:
   735 ;;		line 39 in file "funciones.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  text           80    0[BANK0 ] unsigned char [80]
   740 ;;  parents         4  108[BANK0 ] unsigned long 
   741 ;;  smoke           4  104[BANK0 ] unsigned long 
   742 ;;  gender          4  100[BANK0 ] unsigned long 
   743 ;;  peso            4   96[BANK0 ] unsigned long 
   744 ;;  estatura        4   92[BANK0 ] unsigned long 
   745 ;;  edad            4   88[BANK0 ] unsigned long 
   746 ;;  diastolic       4   84[BANK0 ] unsigned long 
   747 ;;  systolic        4   80[BANK0 ] unsigned long 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         0       0       0       0       0       0       0       0       0
   758 ;;      Locals:         0     112       0       0       0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0
   760 ;;      Totals:         0     112       0       0       0       0       0       0       0
   761 ;;Total ram usage:      112 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    6
   764 ;; This function calls:
   765 ;;		_LCD_goto
   766 ;;		_LCD_puts
   767 ;;		_keyNumber
   768 ;;		_lcdClear
   769 ;;		_sprintf
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text1
   776  0008AE                     __ptext1:
   777                           	opt stack 0
   778  0008AE                     _riksFactors:
   779                           	opt stack 24
   780                           
   781                           ;funciones.c: 40: unsigned char text[80];
   782                           ;funciones.c: 41: unsigned long int edad=0,estatura=0,peso=0,gender=0,smoke=0,parents=0,
      +                          systolic=0,diastolic=0;
   783                           
   784                           ;incstack = 0
   785  0008AE  0E00               	movlw	0
   786  0008B0  0100               	movlb	0	; () banked
   787  0008B2  6FB8               	movwf	riksFactors@edad& (0+255),b
   788  0008B4  0E00               	movlw	0
   789  0008B6  6FB9               	movwf	(riksFactors@edad+1)& (0+255),b
   790  0008B8  0E00               	movlw	0
   791  0008BA  6FBA               	movwf	(riksFactors@edad+2)& (0+255),b
   792  0008BC  0E00               	movlw	0
   793  0008BE  6FBB               	movwf	(riksFactors@edad+3)& (0+255),b
   794  0008C0  0E00               	movlw	0
   795  0008C2  0100               	movlb	0	; () banked
   796  0008C4  6FBC               	movwf	riksFactors@estatura& (0+255),b
   797  0008C6  0E00               	movlw	0
   798  0008C8  6FBD               	movwf	(riksFactors@estatura+1)& (0+255),b
   799  0008CA  0E00               	movlw	0
   800  0008CC  6FBE               	movwf	(riksFactors@estatura+2)& (0+255),b
   801  0008CE  0E00               	movlw	0
   802  0008D0  6FBF               	movwf	(riksFactors@estatura+3)& (0+255),b
   803  0008D2  0E00               	movlw	0
   804  0008D4  0100               	movlb	0	; () banked
   805  0008D6  6FC0               	movwf	riksFactors@peso& (0+255),b
   806  0008D8  0E00               	movlw	0
   807  0008DA  6FC1               	movwf	(riksFactors@peso+1)& (0+255),b
   808  0008DC  0E00               	movlw	0
   809  0008DE  6FC2               	movwf	(riksFactors@peso+2)& (0+255),b
   810  0008E0  0E00               	movlw	0
   811  0008E2  6FC3               	movwf	(riksFactors@peso+3)& (0+255),b
   812  0008E4  0E00               	movlw	0
   813  0008E6  0100               	movlb	0	; () banked
   814  0008E8  6FC4               	movwf	riksFactors@gender& (0+255),b
   815  0008EA  0E00               	movlw	0
   816  0008EC  6FC5               	movwf	(riksFactors@gender+1)& (0+255),b
   817  0008EE  0E00               	movlw	0
   818  0008F0  6FC6               	movwf	(riksFactors@gender+2)& (0+255),b
   819  0008F2  0E00               	movlw	0
   820  0008F4  6FC7               	movwf	(riksFactors@gender+3)& (0+255),b
   821  0008F6  0E00               	movlw	0
   822  0008F8  0100               	movlb	0	; () banked
   823  0008FA  6FC8               	movwf	riksFactors@smoke& (0+255),b
   824  0008FC  0E00               	movlw	0
   825  0008FE  6FC9               	movwf	(riksFactors@smoke+1)& (0+255),b
   826  000900  0E00               	movlw	0
   827  000902  6FCA               	movwf	(riksFactors@smoke+2)& (0+255),b
   828  000904  0E00               	movlw	0
   829  000906  6FCB               	movwf	(riksFactors@smoke+3)& (0+255),b
   830  000908  0E00               	movlw	0
   831  00090A  0100               	movlb	0	; () banked
   832  00090C  6FCC               	movwf	riksFactors@parents& (0+255),b
   833  00090E  0E00               	movlw	0
   834  000910  6FCD               	movwf	(riksFactors@parents+1)& (0+255),b
   835  000912  0E00               	movlw	0
   836  000914  6FCE               	movwf	(riksFactors@parents+2)& (0+255),b
   837  000916  0E00               	movlw	0
   838  000918  6FCF               	movwf	(riksFactors@parents+3)& (0+255),b
   839  00091A  0E00               	movlw	0
   840  00091C  0100               	movlb	0	; () banked
   841  00091E  6FB0               	movwf	riksFactors@systolic& (0+255),b
   842  000920  0E00               	movlw	0
   843  000922  6FB1               	movwf	(riksFactors@systolic+1)& (0+255),b
   844  000924  0E00               	movlw	0
   845  000926  6FB2               	movwf	(riksFactors@systolic+2)& (0+255),b
   846  000928  0E00               	movlw	0
   847  00092A  6FB3               	movwf	(riksFactors@systolic+3)& (0+255),b
   848  00092C  0E00               	movlw	0
   849  00092E  0100               	movlb	0	; () banked
   850  000930  6FB4               	movwf	riksFactors@diastolic& (0+255),b
   851  000932  0E00               	movlw	0
   852  000934  6FB5               	movwf	(riksFactors@diastolic+1)& (0+255),b
   853  000936  0E00               	movlw	0
   854  000938  6FB6               	movwf	(riksFactors@diastolic+2)& (0+255),b
   855  00093A  0E00               	movlw	0
   856  00093C  6FB7               	movwf	(riksFactors@diastolic+3)& (0+255),b
   857                           
   858                           ; BSR set to: 0
   859                           ;funciones.c: 43: lcdClear();
   860  00093E  EC87  F00A         	call	_lcdClear	;wreg free
   861                           
   862                           ;funciones.c: 45: LCD_goto(LCD_01_ADDRESS,1,1);
   863  000942  0E01               	movlw	1
   864  000944  6E0C               	movwf	LCD_goto@row,c
   865  000946  0E01               	movlw	1
   866  000948  6E0D               	movwf	LCD_goto@column,c
   867  00094A  5043               	movf	_LCD_01_ADDRESS,w,c
   868  00094C  ECCE  F008         	call	_LCD_goto
   869                           
   870                           ;funciones.c: 46: LCD_puts(LCD_01_ADDRESS,"Teclee edad" );
   871  000950  0EA1               	movlw	low STR_1
   872  000952  6E0A               	movwf	LCD_puts@s,c
   873  000954  0E08               	movlw	high STR_1
   874  000956  6E0B               	movwf	LCD_puts@s+1,c
   875  000958  5043               	movf	_LCD_01_ADDRESS,w,c
   876  00095A  EC3E  F009         	call	_LCD_puts
   877                           
   878                           ;funciones.c: 47: edad = keyNumber();
   879  00095E  ECDD  F007         	call	_keyNumber	;wreg free
   880  000962  C00F  F0B8         	movff	?_keyNumber,riksFactors@edad
   881  000966  C010  F0B9         	movff	?_keyNumber+1,riksFactors@edad+1
   882  00096A  C011  F0BA         	movff	?_keyNumber+2,riksFactors@edad+2
   883  00096E  C012  F0BB         	movff	?_keyNumber+3,riksFactors@edad+3
   884                           
   885                           ;funciones.c: 48: lcdClear();
   886  000972  EC87  F00A         	call	_lcdClear	;wreg free
   887                           
   888                           ;funciones.c: 50: LCD_goto(LCD_01_ADDRESS,1,1);
   889  000976  0E01               	movlw	1
   890  000978  6E0C               	movwf	LCD_goto@row,c
   891  00097A  0E01               	movlw	1
   892  00097C  6E0D               	movwf	LCD_goto@column,c
   893  00097E  5043               	movf	_LCD_01_ADDRESS,w,c
   894  000980  ECCE  F008         	call	_LCD_goto
   895                           
   896                           ;funciones.c: 51: LCD_puts(LCD_01_ADDRESS,"Teclee peso en kg" );
   897  000984  0E70               	movlw	low STR_2
   898  000986  6E0A               	movwf	LCD_puts@s,c
   899  000988  0E08               	movlw	high STR_2
   900  00098A  6E0B               	movwf	LCD_puts@s+1,c
   901  00098C  5043               	movf	_LCD_01_ADDRESS,w,c
   902  00098E  EC3E  F009         	call	_LCD_puts
   903                           
   904                           ;funciones.c: 52: peso = keyNumber();
   905  000992  ECDD  F007         	call	_keyNumber	;wreg free
   906  000996  C00F  F0C0         	movff	?_keyNumber,riksFactors@peso
   907  00099A  C010  F0C1         	movff	?_keyNumber+1,riksFactors@peso+1
   908  00099E  C011  F0C2         	movff	?_keyNumber+2,riksFactors@peso+2
   909  0009A2  C012  F0C3         	movff	?_keyNumber+3,riksFactors@peso+3
   910                           
   911                           ;funciones.c: 53: lcdClear();
   912  0009A6  EC87  F00A         	call	_lcdClear	;wreg free
   913                           
   914                           ;funciones.c: 55: LCD_goto(LCD_01_ADDRESS,1,1);
   915  0009AA  0E01               	movlw	1
   916  0009AC  6E0C               	movwf	LCD_goto@row,c
   917  0009AE  0E01               	movlw	1
   918  0009B0  6E0D               	movwf	LCD_goto@column,c
   919  0009B2  5043               	movf	_LCD_01_ADDRESS,w,c
   920  0009B4  ECCE  F008         	call	_LCD_goto
   921                           
   922                           ;funciones.c: 56: LCD_puts(LCD_01_ADDRESS,"Teclee estatura(cm)" );
   923  0009B8  0E5C               	movlw	low STR_3
   924  0009BA  6E0A               	movwf	LCD_puts@s,c
   925  0009BC  0E08               	movlw	high STR_3
   926  0009BE  6E0B               	movwf	LCD_puts@s+1,c
   927  0009C0  5043               	movf	_LCD_01_ADDRESS,w,c
   928  0009C2  EC3E  F009         	call	_LCD_puts
   929                           
   930                           ;funciones.c: 57: estatura = keyNumber();
   931  0009C6  ECDD  F007         	call	_keyNumber	;wreg free
   932  0009CA  C00F  F0BC         	movff	?_keyNumber,riksFactors@estatura
   933  0009CE  C010  F0BD         	movff	?_keyNumber+1,riksFactors@estatura+1
   934  0009D2  C011  F0BE         	movff	?_keyNumber+2,riksFactors@estatura+2
   935  0009D6  C012  F0BF         	movff	?_keyNumber+3,riksFactors@estatura+3
   936                           
   937                           ;funciones.c: 58: lcdClear();
   938  0009DA  EC87  F00A         	call	_lcdClear	;wreg free
   939                           
   940                           ;funciones.c: 60: LCD_goto(LCD_01_ADDRESS,1,1);
   941  0009DE  0E01               	movlw	1
   942  0009E0  6E0C               	movwf	LCD_goto@row,c
   943  0009E2  0E01               	movlw	1
   944  0009E4  6E0D               	movwf	LCD_goto@column,c
   945  0009E6  5043               	movf	_LCD_01_ADDRESS,w,c
   946  0009E8  ECCE  F008         	call	_LCD_goto
   947                           
   948                           ;funciones.c: 61: LCD_puts(LCD_01_ADDRESS,"genero 0 H 1 M" );
   949  0009EC  0E92               	movlw	low STR_4
   950  0009EE  6E0A               	movwf	LCD_puts@s,c
   951  0009F0  0E08               	movlw	high STR_4
   952  0009F2  6E0B               	movwf	LCD_puts@s+1,c
   953  0009F4  5043               	movf	_LCD_01_ADDRESS,w,c
   954  0009F6  EC3E  F009         	call	_LCD_puts
   955                           
   956                           ;funciones.c: 62: gender = keyNumber();
   957  0009FA  ECDD  F007         	call	_keyNumber	;wreg free
   958  0009FE  C00F  F0C4         	movff	?_keyNumber,riksFactors@gender
   959  000A02  C010  F0C5         	movff	?_keyNumber+1,riksFactors@gender+1
   960  000A06  C011  F0C6         	movff	?_keyNumber+2,riksFactors@gender+2
   961  000A0A  C012  F0C7         	movff	?_keyNumber+3,riksFactors@gender+3
   962                           
   963                           ;funciones.c: 63: lcdClear();
   964  000A0E  EC87  F00A         	call	_lcdClear	;wreg free
   965                           
   966                           ;funciones.c: 65: LCD_goto(LCD_01_ADDRESS,1,1);
   967  000A12  0E01               	movlw	1
   968  000A14  6E0C               	movwf	LCD_goto@row,c
   969  000A16  0E01               	movlw	1
   970  000A18  6E0D               	movwf	LCD_goto@column,c
   971  000A1A  5043               	movf	_LCD_01_ADDRESS,w,c
   972  000A1C  ECCE  F008         	call	_LCD_goto
   973                           
   974                           ;funciones.c: 66: LCD_puts(LCD_01_ADDRESS,"Fuma? no 0 si 1" );
   975  000A20  0E82               	movlw	low STR_5
   976  000A22  6E0A               	movwf	LCD_puts@s,c
   977  000A24  0E08               	movlw	high STR_5
   978  000A26  6E0B               	movwf	LCD_puts@s+1,c
   979  000A28  5043               	movf	_LCD_01_ADDRESS,w,c
   980  000A2A  EC3E  F009         	call	_LCD_puts
   981                           
   982                           ;funciones.c: 67: smoke = keyNumber();
   983  000A2E  ECDD  F007         	call	_keyNumber	;wreg free
   984  000A32  C00F  F0C8         	movff	?_keyNumber,riksFactors@smoke
   985  000A36  C010  F0C9         	movff	?_keyNumber+1,riksFactors@smoke+1
   986  000A3A  C011  F0CA         	movff	?_keyNumber+2,riksFactors@smoke+2
   987  000A3E  C012  F0CB         	movff	?_keyNumber+3,riksFactors@smoke+3
   988                           
   989                           ;funciones.c: 68: lcdClear();
   990  000A42  EC87  F00A         	call	_lcdClear	;wreg free
   991                           
   992                           ;funciones.c: 70: LCD_goto(LCD_01_ADDRESS,1,1);
   993  000A46  0E01               	movlw	1
   994  000A48  6E0C               	movwf	LCD_goto@row,c
   995  000A4A  0E01               	movlw	1
   996  000A4C  6E0D               	movwf	LCD_goto@column,c
   997  000A4E  5043               	movf	_LCD_01_ADDRESS,w,c
   998  000A50  ECCE  F008         	call	_LCD_goto
   999                           
  1000                           ;funciones.c: 71: LCD_puts(LCD_01_ADDRESS,"padres hiper? no 0  si  1 " );
  1001  000A54  0E29               	movlw	low STR_6
  1002  000A56  6E0A               	movwf	LCD_puts@s,c
  1003  000A58  0E08               	movlw	high STR_6
  1004  000A5A  6E0B               	movwf	LCD_puts@s+1,c
  1005  000A5C  5043               	movf	_LCD_01_ADDRESS,w,c
  1006  000A5E  EC3E  F009         	call	_LCD_puts
  1007                           
  1008                           ;funciones.c: 72: parents = keyNumber();
  1009  000A62  ECDD  F007         	call	_keyNumber	;wreg free
  1010  000A66  C00F  F0CC         	movff	?_keyNumber,riksFactors@parents
  1011  000A6A  C010  F0CD         	movff	?_keyNumber+1,riksFactors@parents+1
  1012  000A6E  C011  F0CE         	movff	?_keyNumber+2,riksFactors@parents+2
  1013  000A72  C012  F0CF         	movff	?_keyNumber+3,riksFactors@parents+3
  1014                           
  1015                           ;funciones.c: 73: lcdClear();
  1016  000A76  EC87  F00A         	call	_lcdClear	;wreg free
  1017                           
  1018                           ;funciones.c: 75: sprintf(text, "%lu,%lu,%lu,%lu,%lu,%lu", edad,peso,estatura,gender,smo
      +                          ke,parents);
  1019  000A7A  0E60               	movlw	low riksFactors@text
  1020  000A7C  6E17               	movwf	sprintf@sp,c
  1021  000A7E  0E00               	movlw	high riksFactors@text
  1022  000A80  6E18               	movwf	sprintf@sp+1,c
  1023  000A82  0E44               	movlw	low STR_7
  1024  000A84  6E19               	movwf	sprintf@f,c
  1025  000A86  0E08               	movlw	high STR_7
  1026  000A88  6E1A               	movwf	sprintf@f+1,c
  1027  000A8A  C0B8  F01B         	movff	riksFactors@edad,?_sprintf+4
  1028  000A8E  C0B9  F01C         	movff	riksFactors@edad+1,?_sprintf+5
  1029  000A92  C0BA  F01D         	movff	riksFactors@edad+2,?_sprintf+6
  1030  000A96  C0BB  F01E         	movff	riksFactors@edad+3,?_sprintf+7
  1031  000A9A  C0C0  F01F         	movff	riksFactors@peso,?_sprintf+8
  1032  000A9E  C0C1  F020         	movff	riksFactors@peso+1,?_sprintf+9
  1033  000AA2  C0C2  F021         	movff	riksFactors@peso+2,?_sprintf+10
  1034  000AA6  C0C3  F022         	movff	riksFactors@peso+3,?_sprintf+11
  1035  000AAA  C0BC  F023         	movff	riksFactors@estatura,?_sprintf+12
  1036  000AAE  C0BD  F024         	movff	riksFactors@estatura+1,?_sprintf+13
  1037  000AB2  C0BE  F025         	movff	riksFactors@estatura+2,?_sprintf+14
  1038  000AB6  C0BF  F026         	movff	riksFactors@estatura+3,?_sprintf+15
  1039  000ABA  C0C4  F027         	movff	riksFactors@gender,?_sprintf+16
  1040  000ABE  C0C5  F028         	movff	riksFactors@gender+1,?_sprintf+17
  1041  000AC2  C0C6  F029         	movff	riksFactors@gender+2,?_sprintf+18
  1042  000AC6  C0C7  F02A         	movff	riksFactors@gender+3,?_sprintf+19
  1043  000ACA  C0C8  F02B         	movff	riksFactors@smoke,?_sprintf+20
  1044  000ACE  C0C9  F02C         	movff	riksFactors@smoke+1,?_sprintf+21
  1045  000AD2  C0CA  F02D         	movff	riksFactors@smoke+2,?_sprintf+22
  1046  000AD6  C0CB  F02E         	movff	riksFactors@smoke+3,?_sprintf+23
  1047  000ADA  C0CC  F02F         	movff	riksFactors@parents,?_sprintf+24
  1048  000ADE  C0CD  F030         	movff	riksFactors@parents+1,?_sprintf+25
  1049  000AE2  C0CE  F031         	movff	riksFactors@parents+2,?_sprintf+26
  1050  000AE6  C0CF  F032         	movff	riksFactors@parents+3,?_sprintf+27
  1051  000AEA  EC86  F005         	call	_sprintf	;wreg free
  1052                           
  1053                           ;funciones.c: 76: LCD_goto(LCD_01_ADDRESS,2,1);
  1054  000AEE  0E02               	movlw	2
  1055  000AF0  6E0C               	movwf	LCD_goto@row,c
  1056  000AF2  0E01               	movlw	1
  1057  000AF4  6E0D               	movwf	LCD_goto@column,c
  1058  000AF6  5043               	movf	_LCD_01_ADDRESS,w,c
  1059  000AF8  ECCE  F008         	call	_LCD_goto
  1060                           
  1061                           ;funciones.c: 77: LCD_puts(LCD_01_ADDRESS,text );
  1062  000AFC  0E60               	movlw	low riksFactors@text
  1063  000AFE  6E0A               	movwf	LCD_puts@s,c
  1064  000B00  0E00               	movlw	high riksFactors@text
  1065  000B02  6E0B               	movwf	LCD_puts@s+1,c
  1066  000B04  5043               	movf	_LCD_01_ADDRESS,w,c
  1067  000B06  EC3E  F009         	call	_LCD_puts
  1068  000B0A  0012               	return		;funcret
  1069  000B0C                     __end_of_riksFactors:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           
  1078 ;; *************** function _sprintf *****************
  1079 ;; Defined at:
  1080 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  sp              2   22[COMRAM] PTR unsigned char 
  1083 ;;		 -> riksFactors@text(80), 
  1084 ;;  f               2   24[COMRAM] PTR const unsigned char 
  1085 ;;		 -> STR_7(24), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  val             4   55[COMRAM] unsigned long 
  1088 ;;  tmpval          4    0        struct .
  1089 ;;  cp              3    0        PTR const unsigned char 
  1090 ;;  ap              2   59[COMRAM] PTR void [1]
  1091 ;;		 -> ?_sprintf(2), 
  1092 ;;  prec            2   53[COMRAM] int 
  1093 ;;  len             2    0        unsigned int 
  1094 ;;  c               1   61[COMRAM] char 
  1095 ;;  flag            1   52[COMRAM] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2   22[COMRAM] int 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:        28       0       0       0       0       0       0       0       0
  1106 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1108 ;;      Totals:        40       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:       40 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    1
  1112 ;; This function calls:
  1113 ;;		___lldiv
  1114 ;;		___llmod
  1115 ;; This function is called by:
  1116 ;;		_riksFactors
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text2
  1121  000B0C                     __ptext2:
  1122                           	opt stack 0
  1123  000B0C                     _sprintf:
  1124                           	opt stack 28
  1125                           
  1126                           ;doprnt.c: 494: va_list ap;
  1127                           ;doprnt.c: 499: signed char c;
  1128                           ;doprnt.c: 504: int prec;
  1129                           ;doprnt.c: 508: unsigned char flag;
  1130                           ;doprnt.c: 523: union {
  1131                           ;doprnt.c: 524: unsigned long vd;
  1132                           ;doprnt.c: 525: double integ;
  1133                           ;doprnt.c: 526: } tmpval;
  1134                           ;doprnt.c: 528: unsigned long val;
  1135                           ;doprnt.c: 529: unsigned len;
  1136                           ;doprnt.c: 530: const char * cp;
  1137                           ;doprnt.c: 533: *ap = __va_start();
  1138                           
  1139                           ;incstack = 0
  1140  000B0C  0E1B               	movlw	low (?_sprintf+4)
  1141  000B0E  6E3C               	movwf	sprintf@ap,c
  1142  000B10  0E00               	movlw	high (?_sprintf+4)
  1143  000B12  6E3D               	movwf	sprintf@ap+1,c
  1144                           
  1145                           ;doprnt.c: 536: while(c = *f++) {
  1146  000B14  D0BA               	goto	l1893
  1147  000B16                     l1845:
  1148                           
  1149                           ;doprnt.c: 538: if(c != '%')
  1150  000B16  0E25               	movlw	37
  1151  000B18  183E               	xorwf	sprintf@c,w,c
  1152  000B1A  B4D8               	btfsc	status,2,c
  1153  000B1C  D009               	goto	l1851
  1154                           
  1155                           ;doprnt.c: 540: {
  1156                           ;doprnt.c: 541: ((*sp++ = (c)));
  1157  000B1E  C017  FFD9         	movff	sprintf@sp,fsr2l
  1158  000B22  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  1159  000B26  C03E  FFDF         	movff	sprintf@c,indf2
  1160  000B2A  4A17               	infsnz	sprintf@sp,f,c
  1161  000B2C  2A18               	incf	sprintf@sp+1,f,c
  1162                           
  1163                           ;doprnt.c: 542: continue;
  1164  000B2E  D0AD               	goto	l1893
  1165  000B30                     l1851:
  1166                           
  1167                           ;doprnt.c: 543: }
  1168                           ;doprnt.c: 548: flag = 0;
  1169  000B30  0E00               	movlw	0
  1170  000B32  6E35               	movwf	sprintf@flag,c
  1171                           
  1172                           ;doprnt.c: 635: switch(c = *f++) {
  1173                           
  1174                           ;doprnt.c: 633: loop:
  1175  000B34  D005               	goto	l1859
  1176  000B36                     l1853:
  1177                           
  1178                           ;doprnt.c: 643: flag |= 0x10;
  1179  000B36  8835               	bsf	sprintf@flag,4,c
  1180                           
  1181                           ;doprnt.c: 644: goto loop;
  1182  000B38  D003               	goto	l1859
  1183  000B3A                     l1855:
  1184                           
  1185                           ;doprnt.c: 818: flag |= 0xC0;
  1186  000B3A  0EC0               	movlw	192
  1187  000B3C  1235               	iorwf	sprintf@flag,f,c
  1188                           
  1189                           ;doprnt.c: 822: }
  1190                           
  1191                           ;doprnt.c: 819: break;
  1192  000B3E  D014               	goto	l184
  1193  000B40                     l1859:
  1194  000B40  C019  FFF6         	movff	sprintf@f,tblptrl
  1195  000B44  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  1196  000B48  4A19               	infsnz	sprintf@f,f,c
  1197  000B4A  2A1A               	incf	sprintf@f+1,f,c
  1198  000B4C                     	if	0	;tblptru may be non-zero
  1199  000B4C                     	endif
  1200  000B4C                     	if	0	;tblptru may be non-zero
  1201  000B4C                     	endif
  1202  000B4C  0008               	tblrd		*
  1203  000B4E  CFF5 F03E          	movff	tablat,sprintf@c
  1204  000B52  503E               	movf	sprintf@c,w,c
  1205                           
  1206                           ; Switch size 1, requested type "space"
  1207                           ; Number of cases is 3, Range of values is 0 to 117
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte           10     6 (average)
  1211                           ;	Chosen strategy is simple_byte
  1212  000B54  0A00               	xorlw	0	; case 0
  1213  000B56  B4D8               	btfsc	status,2,c
  1214  000B58  D0A4               	goto	l1895
  1215  000B5A  0A6C               	xorlw	108	; case 108
  1216  000B5C  B4D8               	btfsc	status,2,c
  1217  000B5E  D7EB               	goto	l1853
  1218  000B60  0A19               	xorlw	25	; case 117
  1219  000B62  B4D8               	btfsc	status,2,c
  1220  000B64  D7EA               	goto	l1855
  1221  000B66  D091               	goto	l1893
  1222  000B68                     l184:
  1223                           
  1224                           ;doprnt.c: 1273: {
  1225                           ;doprnt.c: 1281: if(flag & 0x10)
  1226  000B68  A835               	btfss	sprintf@flag,4,c
  1227  000B6A  D00E               	goto	l1865
  1228                           
  1229                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1230  000B6C  C03C  FFD9         	movff	sprintf@ap,fsr2l
  1231  000B70  C03D  FFDA         	movff	sprintf@ap+1,fsr2h
  1232  000B74  CFDE F038          	movff	postinc2,sprintf@val
  1233  000B78  CFDE F039          	movff	postinc2,sprintf@val+1
  1234  000B7C  CFDE F03A          	movff	postinc2,sprintf@val+2
  1235  000B80  CFDE F03B          	movff	postinc2,sprintf@val+3
  1236  000B84  0E04               	movlw	4
  1237  000B86  D00F               	goto	L1
  1238  000B88                     l1865:
  1239                           
  1240                           ;doprnt.c: 1283: else
  1241                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1242  000B88  C03C  FFD9         	movff	sprintf@ap,fsr2l
  1243  000B8C  C03D  FFDA         	movff	sprintf@ap+1,fsr2h
  1244  000B90  CFDE F033          	movff	postinc2,??_sprintf
  1245  000B94  CFDD F034          	movff	postdec2,??_sprintf+1
  1246  000B98  C033  F038         	movff	??_sprintf,sprintf@val
  1247  000B9C  C034  F039         	movff	??_sprintf+1,sprintf@val+1
  1248  000BA0  6A3A               	clrf	sprintf@val+2,c
  1249  000BA2  6A3B               	clrf	sprintf@val+3,c
  1250  000BA4  0E02               	movlw	2
  1251  000BA6                     L1:
  1252  000BA6  263C               	addwf	sprintf@ap,f,c
  1253  000BA8  0E00               	movlw	0
  1254  000BAA  223D               	addwfc	sprintf@ap+1,f,c
  1255                           
  1256                           ;doprnt.c: 1287: }
  1257                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1258  000BAC  0E01               	movlw	1
  1259  000BAE  6E3E               	movwf	sprintf@c,c
  1260  000BB0                     l1871:
  1261  000BB0  0E0A               	movlw	10
  1262  000BB2  183E               	xorwf	sprintf@c,w,c
  1263  000BB4  B4D8               	btfsc	status,2,c
  1264  000BB6  D018               	goto	l1883
  1265                           
  1266                           ;doprnt.c: 1306: if(val < dpowers[c])
  1267  000BB8  503E               	movf	sprintf@c,w,c
  1268  000BBA  0D04               	mullw	4
  1269  000BBC  0E01               	movlw	low _dpowers
  1270  000BBE  24F3               	addwf	prodl,w,c
  1271  000BC0  6EF6               	movwf	tblptrl,c
  1272  000BC2  0E08               	movlw	high _dpowers
  1273  000BC4  20F4               	addwfc	prodh,w,c
  1274  000BC6  6EF7               	movwf	tblptrh,c
  1275  000BC8                     	if	0	;There are less than 3 active tblptr bytes
  1276  000BC8                     	endif
  1277  000BC8  0009               	tblrd		*+
  1278  000BCA  50F5               	movf	tablat,w,c
  1279  000BCC  5C38               	subwf	sprintf@val,w,c
  1280  000BCE  0009               	tblrd		*+
  1281  000BD0  50F5               	movf	tablat,w,c
  1282  000BD2  5839               	subwfb	sprintf@val+1,w,c
  1283  000BD4  0009               	tblrd		*+
  1284  000BD6  50F5               	movf	tablat,w,c
  1285  000BD8  583A               	subwfb	sprintf@val+2,w,c
  1286  000BDA  0009               	tblrd		*+
  1287  000BDC  50F5               	movf	tablat,w,c
  1288  000BDE  583B               	subwfb	sprintf@val+3,w,c
  1289  000BE0  A0D8               	btfss	status,0,c
  1290  000BE2  D002               	goto	l1883
  1291                           
  1292                           ;doprnt.c: 1307: break;
  1293  000BE4  2A3E               	incf	sprintf@c,f,c
  1294  000BE6  D7E4               	goto	l1871
  1295  000BE8                     l1883:
  1296                           
  1297                           ;doprnt.c: 1422: {
  1298                           ;doprnt.c: 1469: }
  1299                           ;doprnt.c: 1472: prec = c;
  1300  000BE8  503E               	movf	sprintf@c,w,c
  1301  000BEA  6E36               	movwf	sprintf@prec,c
  1302  000BEC  6A37               	clrf	sprintf@prec+1,c
  1303  000BEE  BE36               	btfsc	sprintf@prec,7,c
  1304  000BF0  0637               	decf	sprintf@prec+1,f,c
  1305                           
  1306                           ;doprnt.c: 1474: while(prec--) {
  1307  000BF2  D043               	goto	l1891
  1308  000BF4                     l1885:
  1309                           
  1310                           ;doprnt.c: 1478: {
  1311                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1312  000BF4  C036  F033         	movff	sprintf@prec,??_sprintf
  1313  000BF8  C037  F034         	movff	sprintf@prec+1,??_sprintf+1
  1314  000BFC  90D8               	bcf	status,0,c
  1315  000BFE  3633               	rlcf	??_sprintf,f,c
  1316  000C00  3634               	rlcf	??_sprintf+1,f,c
  1317  000C02  90D8               	bcf	status,0,c
  1318  000C04  3633               	rlcf	??_sprintf,f,c
  1319  000C06  3634               	rlcf	??_sprintf+1,f,c
  1320  000C08  0E01               	movlw	low _dpowers
  1321  000C0A  2433               	addwf	??_sprintf,w,c
  1322  000C0C  6EF6               	movwf	tblptrl,c
  1323  000C0E  0E08               	movlw	high _dpowers
  1324  000C10  2034               	addwfc	??_sprintf+1,w,c
  1325  000C12  6EF7               	movwf	tblptrh,c
  1326  000C14                     	if	0	;There are less than 3 active tblptr bytes
  1327  000C14                     	endif
  1328  000C14  0009               	tblrd		*+
  1329  000C16  CFF5 F005          	movff	tablat,___lldiv@divisor
  1330  000C1A  0009               	tblrd		*+
  1331  000C1C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1332  000C20  0009               	tblrd		*+
  1333  000C22  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1334  000C26  000A               	tblrd		*-
  1335  000C28  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1336  000C2C  C038  F001         	movff	sprintf@val,___lldiv@dividend
  1337  000C30  C039  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1338  000C34  C03A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1339  000C38  C03B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1340  000C3C  EC8D  F008         	call	___lldiv	;wreg free
  1341  000C40  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1342  000C44  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1343  000C48  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1344  000C4C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1345  000C50  0E0A               	movlw	10
  1346  000C52  6E12               	movwf	___llmod@divisor,c
  1347  000C54  0E00               	movlw	0
  1348  000C56  6E13               	movwf	___llmod@divisor+1,c
  1349  000C58  0E00               	movlw	0
  1350  000C5A  6E14               	movwf	___llmod@divisor+2,c
  1351  000C5C  0E00               	movlw	0
  1352  000C5E  6E15               	movwf	___llmod@divisor+3,c
  1353  000C60  EC0B  F009         	call	___llmod	;wreg free
  1354  000C64  500E               	movf	?___llmod,w,c
  1355  000C66  0F30               	addlw	48
  1356  000C68  6E3E               	movwf	sprintf@c,c
  1357                           
  1358                           ;doprnt.c: 1523: }
  1359                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1360  000C6A  C017  FFD9         	movff	sprintf@sp,fsr2l
  1361  000C6E  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  1362  000C72  C03E  FFDF         	movff	sprintf@c,indf2
  1363  000C76  4A17               	infsnz	sprintf@sp,f,c
  1364  000C78  2A18               	incf	sprintf@sp+1,f,c
  1365  000C7A                     l1891:
  1366  000C7A  0636               	decf	sprintf@prec,f,c
  1367  000C7C  A0D8               	btfss	status,0,c
  1368  000C7E  0637               	decf	sprintf@prec+1,f,c
  1369  000C80  2836               	incf	sprintf@prec,w,c
  1370  000C82  E1B8               	bnz	l1885
  1371  000C84  2837               	incf	sprintf@prec+1,w,c
  1372  000C86  A4D8               	btfss	status,2,c
  1373  000C88  D7B5               	goto	l1885
  1374  000C8A                     l1893:
  1375  000C8A  C019  FFF6         	movff	sprintf@f,tblptrl
  1376  000C8E  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  1377  000C92  4A19               	infsnz	sprintf@f,f,c
  1378  000C94  2A1A               	incf	sprintf@f+1,f,c
  1379  000C96                     	if	0	;tblptru may be non-zero
  1380  000C96                     	endif
  1381  000C96                     	if	0	;tblptru may be non-zero
  1382  000C96                     	endif
  1383  000C96  0008               	tblrd		*
  1384  000C98  CFF5 F03E          	movff	tablat,sprintf@c
  1385  000C9C  503E               	movf	sprintf@c,w,c
  1386  000C9E  A4D8               	btfss	status,2,c
  1387  000CA0  D73A               	goto	l1845
  1388  000CA2                     l1895:
  1389                           
  1390                           ;doprnt.c: 1538: *sp = 0;
  1391  000CA2  C017  FFD9         	movff	sprintf@sp,fsr2l
  1392  000CA6  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  1393  000CAA  0E00               	movlw	0
  1394  000CAC  6EDF               	movwf	indf2,c
  1395  000CAE  0012               	return	
  1396  000CB0                     __end_of_sprintf:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           indf2	equ	0xFDF
  1407                           postinc2	equ	0xFDE
  1408                           postdec2	equ	0xFDD
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function ___llmod *****************
  1414 ;; Defined at:
  1415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  dividend        4   13[COMRAM] unsigned long 
  1418 ;;  divisor         4   17[COMRAM] unsigned long 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  counter         1   21[COMRAM] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  4   13[COMRAM] unsigned long 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         8       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        9 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_sprintf
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text3
  1444  001216                     __ptext3:
  1445                           	opt stack 0
  1446  001216                     ___llmod:
  1447                           	opt stack 28
  1448                           
  1449                           ;incstack = 0
  1450  001216  5012               	movf	___llmod@divisor,w,c
  1451  001218  1013               	iorwf	___llmod@divisor+1,w,c
  1452  00121A  1014               	iorwf	___llmod@divisor+2,w,c
  1453  00121C  1015               	iorwf	___llmod@divisor+3,w,c
  1454  00121E  B4D8               	btfsc	status,2,c
  1455  001220  D024               	goto	l619
  1456  001222  0E01               	movlw	1
  1457  001224  6E16               	movwf	___llmod@counter,c
  1458  001226  D006               	goto	l1797
  1459  001228                     l1795:
  1460  001228  90D8               	bcf	status,0,c
  1461  00122A  3612               	rlcf	___llmod@divisor,f,c
  1462  00122C  3613               	rlcf	___llmod@divisor+1,f,c
  1463  00122E  3614               	rlcf	___llmod@divisor+2,f,c
  1464  001230  3615               	rlcf	___llmod@divisor+3,f,c
  1465  001232  2A16               	incf	___llmod@counter,f,c
  1466  001234                     l1797:
  1467  001234  AE15               	btfss	___llmod@divisor+3,7,c
  1468  001236  D7F8               	goto	l1795
  1469  001238                     l1799:
  1470  001238  5012               	movf	___llmod@divisor,w,c
  1471  00123A  5C0E               	subwf	___llmod@dividend,w,c
  1472  00123C  5013               	movf	___llmod@divisor+1,w,c
  1473  00123E  580F               	subwfb	___llmod@dividend+1,w,c
  1474  001240  5014               	movf	___llmod@divisor+2,w,c
  1475  001242  5810               	subwfb	___llmod@dividend+2,w,c
  1476  001244  5015               	movf	___llmod@divisor+3,w,c
  1477  001246  5811               	subwfb	___llmod@dividend+3,w,c
  1478  001248  A0D8               	btfss	status,0,c
  1479  00124A  D008               	goto	l1803
  1480  00124C  5012               	movf	___llmod@divisor,w,c
  1481  00124E  5E0E               	subwf	___llmod@dividend,f,c
  1482  001250  5013               	movf	___llmod@divisor+1,w,c
  1483  001252  5A0F               	subwfb	___llmod@dividend+1,f,c
  1484  001254  5014               	movf	___llmod@divisor+2,w,c
  1485  001256  5A10               	subwfb	___llmod@dividend+2,f,c
  1486  001258  5015               	movf	___llmod@divisor+3,w,c
  1487  00125A  5A11               	subwfb	___llmod@dividend+3,f,c
  1488  00125C                     l1803:
  1489  00125C  90D8               	bcf	status,0,c
  1490  00125E  3215               	rrcf	___llmod@divisor+3,f,c
  1491  001260  3214               	rrcf	___llmod@divisor+2,f,c
  1492  001262  3213               	rrcf	___llmod@divisor+1,f,c
  1493  001264  3212               	rrcf	___llmod@divisor,f,c
  1494  001266  2E16               	decfsz	___llmod@counter,f,c
  1495  001268  D7E7               	goto	l1799
  1496  00126A                     l619:
  1497  00126A  C00E  F00E         	movff	___llmod@dividend,?___llmod
  1498  00126E  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  1499  001272  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  1500  001276  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  1501  00127A  0012               	return		;funcret
  1502  00127C                     __end_of___llmod:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           indf2	equ	0xFDF
  1513                           postinc2	equ	0xFDE
  1514                           postdec2	equ	0xFDD
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function ___lldiv *****************
  1520 ;; Defined at:
  1521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  dividend        4    0[COMRAM] unsigned long 
  1524 ;;  divisor         4    4[COMRAM] unsigned long 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  quotient        4    8[COMRAM] unsigned long 
  1527 ;;  counter         1   12[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  4    0[COMRAM] unsigned long 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         8       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:       13 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_sprintf
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text4
  1551  00111A                     __ptext4:
  1552                           	opt stack 0
  1553  00111A                     ___lldiv:
  1554                           	opt stack 28
  1555                           
  1556                           ;incstack = 0
  1557  00111A  0E00               	movlw	0
  1558  00111C  6E09               	movwf	___lldiv@quotient,c
  1559  00111E  0E00               	movlw	0
  1560  001120  6E0A               	movwf	___lldiv@quotient+1,c
  1561  001122  0E00               	movlw	0
  1562  001124  6E0B               	movwf	___lldiv@quotient+2,c
  1563  001126  0E00               	movlw	0
  1564  001128  6E0C               	movwf	___lldiv@quotient+3,c
  1565  00112A  5005               	movf	___lldiv@divisor,w,c
  1566  00112C  1006               	iorwf	___lldiv@divisor+1,w,c
  1567  00112E  1007               	iorwf	___lldiv@divisor+2,w,c
  1568  001130  1008               	iorwf	___lldiv@divisor+3,w,c
  1569  001132  B4D8               	btfsc	status,2,c
  1570  001134  D02A               	goto	l609
  1571  001136  0E01               	movlw	1
  1572  001138  6E0D               	movwf	___lldiv@counter,c
  1573  00113A  D006               	goto	l1777
  1574  00113C                     l1775:
  1575  00113C  90D8               	bcf	status,0,c
  1576  00113E  3605               	rlcf	___lldiv@divisor,f,c
  1577  001140  3606               	rlcf	___lldiv@divisor+1,f,c
  1578  001142  3607               	rlcf	___lldiv@divisor+2,f,c
  1579  001144  3608               	rlcf	___lldiv@divisor+3,f,c
  1580  001146  2A0D               	incf	___lldiv@counter,f,c
  1581  001148                     l1777:
  1582  001148  AE08               	btfss	___lldiv@divisor+3,7,c
  1583  00114A  D7F8               	goto	l1775
  1584  00114C                     l1779:
  1585  00114C  90D8               	bcf	status,0,c
  1586  00114E  3609               	rlcf	___lldiv@quotient,f,c
  1587  001150  360A               	rlcf	___lldiv@quotient+1,f,c
  1588  001152  360B               	rlcf	___lldiv@quotient+2,f,c
  1589  001154  360C               	rlcf	___lldiv@quotient+3,f,c
  1590  001156  5005               	movf	___lldiv@divisor,w,c
  1591  001158  5C01               	subwf	___lldiv@dividend,w,c
  1592  00115A  5006               	movf	___lldiv@divisor+1,w,c
  1593  00115C  5802               	subwfb	___lldiv@dividend+1,w,c
  1594  00115E  5007               	movf	___lldiv@divisor+2,w,c
  1595  001160  5803               	subwfb	___lldiv@dividend+2,w,c
  1596  001162  5008               	movf	___lldiv@divisor+3,w,c
  1597  001164  5804               	subwfb	___lldiv@dividend+3,w,c
  1598  001166  A0D8               	btfss	status,0,c
  1599  001168  D009               	goto	l1787
  1600  00116A  5005               	movf	___lldiv@divisor,w,c
  1601  00116C  5E01               	subwf	___lldiv@dividend,f,c
  1602  00116E  5006               	movf	___lldiv@divisor+1,w,c
  1603  001170  5A02               	subwfb	___lldiv@dividend+1,f,c
  1604  001172  5007               	movf	___lldiv@divisor+2,w,c
  1605  001174  5A03               	subwfb	___lldiv@dividend+2,f,c
  1606  001176  5008               	movf	___lldiv@divisor+3,w,c
  1607  001178  5A04               	subwfb	___lldiv@dividend+3,f,c
  1608  00117A  8009               	bsf	___lldiv@quotient,0,c
  1609  00117C                     l1787:
  1610  00117C  90D8               	bcf	status,0,c
  1611  00117E  3208               	rrcf	___lldiv@divisor+3,f,c
  1612  001180  3207               	rrcf	___lldiv@divisor+2,f,c
  1613  001182  3206               	rrcf	___lldiv@divisor+1,f,c
  1614  001184  3205               	rrcf	___lldiv@divisor,f,c
  1615  001186  2E0D               	decfsz	___lldiv@counter,f,c
  1616  001188  D7E1               	goto	l1779
  1617  00118A                     l609:
  1618  00118A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1619  00118E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1620  001192  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1621  001196  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1622  00119A  0012               	return		;funcret
  1623  00119C                     __end_of___lldiv:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           indf2	equ	0xFDF
  1634                           postinc2	equ	0xFDE
  1635                           postdec2	equ	0xFDD
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _lcdClear *****************
  1641 ;; Defined at:
  1642 ;;		line 80 in file "funciones.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    4
  1663 ;; This function calls:
  1664 ;;		_LCD_putcmd
  1665 ;; This function is called by:
  1666 ;;		_riksFactors
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text5
  1671  00150E                     __ptext5:
  1672                           	opt stack 0
  1673  00150E                     _lcdClear:
  1674                           	opt stack 25
  1675                           
  1676                           ;funciones.c: 89: LCD_putcmd(LCD_01_ADDRESS, 0x01,1);
  1677                           
  1678                           ;incstack = 0
  1679  00150E  0E01               	movlw	1
  1680  001510  6E07               	movwf	LCD_putcmd@data,c
  1681  001512  0E01               	movlw	1
  1682  001514  6E08               	movwf	LCD_putcmd@cmdtype,c
  1683  001516  5043               	movf	_LCD_01_ADDRESS,w,c
  1684  001518  EC9D  F009         	call	_LCD_putcmd
  1685  00151C  0012               	return		;funcret
  1686  00151E                     __end_of_lcdClear:
  1687                           	opt stack 0
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           prodh	equ	0xFF4
  1693                           prodl	equ	0xFF3
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           indf2	equ	0xFDF
  1697                           postinc2	equ	0xFDE
  1698                           postdec2	equ	0xFDD
  1699                           fsr2h	equ	0xFDA
  1700                           fsr2l	equ	0xFD9
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _keyNumber *****************
  1704 ;; Defined at:
  1705 ;;		line 6 in file "funciones.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  arreglo        20   18[COMRAM] unsigned char [20]
  1710 ;;  number          4   38[COMRAM] unsigned long 
  1711 ;;  i               2   45[COMRAM] unsigned int 
  1712 ;;  contador        2   42[COMRAM] unsigned int 
  1713 ;;  tecla           1   44[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  4   14[COMRAM] unsigned long 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         4       0       0       0       0       0       0       0       0
  1724 ;;      Locals:        29       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1726 ;;      Totals:        33       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:       33 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    5
  1730 ;; This function calls:
  1731 ;;		_KP_Readbutton
  1732 ;;		_LCD_goto
  1733 ;;		_LCD_puts
  1734 ;;		_atoi
  1735 ;; This function is called by:
  1736 ;;		_riksFactors
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text6
  1741  000FBA                     __ptext6:
  1742                           	opt stack 0
  1743  000FBA                     _keyNumber:
  1744                           	opt stack 24
  1745                           
  1746                           ;funciones.c: 7: unsigned char arreglo[20];
  1747                           ;funciones.c: 8: unsigned int contador =0,i=0;
  1748                           
  1749                           ;incstack = 0
  1750  000FBA  0E00               	movlw	0
  1751  000FBC  6E2C               	movwf	keyNumber@contador+1,c
  1752  000FBE  0E00               	movlw	0
  1753  000FC0  6E2B               	movwf	keyNumber@contador,c
  1754  000FC2  0E00               	movlw	0
  1755  000FC4  6E2F               	movwf	keyNumber@i+1,c
  1756  000FC6  0E00               	movlw	0
  1757  000FC8  6E2E               	movwf	keyNumber@i,c
  1758  000FCA                     l1809:
  1759  000FCA  502F               	movf	keyNumber@i+1,w,c
  1760  000FCC  E10F               	bnz	l1819
  1761  000FCE  0E0A               	movlw	10
  1762  000FD0  5C2E               	subwf	keyNumber@i,w,c
  1763  000FD2  B0D8               	btfsc	status,0,c
  1764  000FD4  D00B               	goto	l1819
  1765                           
  1766                           ;funciones.c: 11: arreglo[i]=0;
  1767  000FD6  0E13               	movlw	low keyNumber@arreglo
  1768  000FD8  242E               	addwf	keyNumber@i,w,c
  1769  000FDA  6ED9               	movwf	fsr2l,c
  1770  000FDC  0E00               	movlw	high keyNumber@arreglo
  1771  000FDE  202F               	addwfc	keyNumber@i+1,w,c
  1772  000FE0  6EDA               	movwf	fsr2h,c
  1773  000FE2  0E00               	movlw	0
  1774  000FE4  6EDF               	movwf	indf2,c
  1775  000FE6  4A2E               	infsnz	keyNumber@i,f,c
  1776  000FE8  2A2F               	incf	keyNumber@i+1,f,c
  1777  000FEA  D7EF               	goto	l1809
  1778  000FEC                     l1819:
  1779                           
  1780                           ;funciones.c: 15: tecla = KP_Readbutton();
  1781  000FEC  EC58  F006         	call	_KP_Readbutton	;wreg free
  1782  000FF0  6E2D               	movwf	keyNumber@tecla,c
  1783                           
  1784                           ;funciones.c: 17: if (tecla != '+'){
  1785  000FF2  0E2B               	movlw	43
  1786  000FF4  182D               	xorwf	keyNumber@tecla,w,c
  1787  000FF6  B4D8               	btfsc	status,2,c
  1788  000FF8  D019               	goto	l1831
  1789                           
  1790                           ;funciones.c: 18: arreglo[contador]= tecla;
  1791  000FFA  0E13               	movlw	low keyNumber@arreglo
  1792  000FFC  242B               	addwf	keyNumber@contador,w,c
  1793  000FFE  6ED9               	movwf	fsr2l,c
  1794  001000  0E00               	movlw	high keyNumber@arreglo
  1795  001002  202C               	addwfc	keyNumber@contador+1,w,c
  1796  001004  6EDA               	movwf	fsr2h,c
  1797  001006  C02D  FFDF         	movff	keyNumber@tecla,indf2
  1798                           
  1799                           ;funciones.c: 19: LCD_goto(LCD_01_ADDRESS,2,1);
  1800  00100A  0E02               	movlw	2
  1801  00100C  6E0C               	movwf	LCD_goto@row,c
  1802  00100E  0E01               	movlw	1
  1803  001010  6E0D               	movwf	LCD_goto@column,c
  1804  001012  5043               	movf	_LCD_01_ADDRESS,w,c
  1805  001014  ECCE  F008         	call	_LCD_goto
  1806                           
  1807                           ;funciones.c: 20: LCD_puts(LCD_01_ADDRESS, arreglo);
  1808  001018  0E13               	movlw	low keyNumber@arreglo
  1809  00101A  6E0A               	movwf	LCD_puts@s,c
  1810  00101C  0E00               	movlw	high keyNumber@arreglo
  1811  00101E  6E0B               	movwf	LCD_puts@s+1,c
  1812  001020  5043               	movf	_LCD_01_ADDRESS,w,c
  1813  001022  EC3E  F009         	call	_LCD_puts
  1814                           
  1815                           ;funciones.c: 21: contador++;
  1816  001026  4A2B               	infsnz	keyNumber@contador,f,c
  1817  001028  2A2C               	incf	keyNumber@contador+1,f,c
  1818                           
  1819                           ;funciones.c: 23: }
  1820  00102A  D7E0               	goto	l1819
  1821  00102C                     l1831:
  1822                           
  1823                           ;funciones.c: 24: else
  1824                           ;funciones.c: 25: {
  1825                           ;funciones.c: 26: LCD_goto(LCD_01_ADDRESS,2,1);
  1826  00102C  0E02               	movlw	2
  1827  00102E  6E0C               	movwf	LCD_goto@row,c
  1828  001030  0E01               	movlw	1
  1829  001032  6E0D               	movwf	LCD_goto@column,c
  1830  001034  5043               	movf	_LCD_01_ADDRESS,w,c
  1831  001036  ECCE  F008         	call	_LCD_goto
  1832                           
  1833                           ;funciones.c: 27: LCD_puts(LCD_01_ADDRESS, arreglo);
  1834  00103A  0E13               	movlw	low keyNumber@arreglo
  1835  00103C  6E0A               	movwf	LCD_puts@s,c
  1836  00103E  0E00               	movlw	high keyNumber@arreglo
  1837  001040  6E0B               	movwf	LCD_puts@s+1,c
  1838  001042  5043               	movf	_LCD_01_ADDRESS,w,c
  1839  001044  EC3E  F009         	call	_LCD_puts
  1840                           
  1841                           ;funciones.c: 29: }
  1842                           ;funciones.c: 33: }
  1843                           ;funciones.c: 35: number = (unsigned long int)atoi(arreglo);
  1844                           
  1845                           ;funciones.c: 28: break;
  1846  001048  0E13               	movlw	low keyNumber@arreglo
  1847  00104A  6E07               	movwf	atoi@s,c
  1848  00104C  0E00               	movlw	high keyNumber@arreglo
  1849  00104E  6E08               	movwf	atoi@s+1,c
  1850  001050  EC76  F007         	call	_atoi	;wreg free
  1851  001054  C007  F027         	movff	?_atoi,keyNumber@number
  1852  001058  C008  F028         	movff	?_atoi+1,keyNumber@number+1
  1853  00105C  0E00               	movlw	0
  1854  00105E  BE28               	btfsc	keyNumber@number+1,7,c
  1855  001060  0EFF               	movlw	-1
  1856  001062  6E29               	movwf	keyNumber@number+2,c
  1857  001064  6E2A               	movwf	keyNumber@number+3,c
  1858                           
  1859                           ;funciones.c: 36: return number;
  1860  001066  C027  F00F         	movff	keyNumber@number,?_keyNumber
  1861  00106A  C028  F010         	movff	keyNumber@number+1,?_keyNumber+1
  1862  00106E  C029  F011         	movff	keyNumber@number+2,?_keyNumber+2
  1863  001072  C02A  F012         	movff	keyNumber@number+3,?_keyNumber+3
  1864  001076  0012               	return	
  1865  001078                     __end_of_keyNumber:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodh	equ	0xFF4
  1872                           prodl	equ	0xFF3
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           indf2	equ	0xFDF
  1876                           postinc2	equ	0xFDE
  1877                           postdec2	equ	0xFDD
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _atoi *****************
  1883 ;; Defined at:
  1884 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1887 ;;		 -> keyNumber@arreglo(20), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  a               2   11[COMRAM] int 
  1890 ;;  sign            1   10[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    6[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        7 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    1
  1907 ;; This function calls:
  1908 ;;		___wmul
  1909 ;;		_isdigit
  1910 ;; This function is called by:
  1911 ;;		_keyNumber
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text7
  1916  000EEC                     __ptext7:
  1917                           	opt stack 0
  1918  000EEC                     _atoi:
  1919                           	opt stack 27
  1920                           
  1921                           ;incstack = 0
  1922  000EEC  D002               	goto	l1745
  1923  000EEE                     l1743:
  1924  000EEE  4A07               	infsnz	atoi@s,f,c
  1925  000EF0  2A08               	incf	atoi@s+1,f,c
  1926  000EF2                     l1745:
  1927  000EF2  C007  FFD9         	movff	atoi@s,fsr2l
  1928  000EF6  C008  FFDA         	movff	atoi@s+1,fsr2h
  1929  000EFA  0E20               	movlw	32
  1930  000EFC  18DE               	xorwf	postinc2,w,c
  1931  000EFE  B4D8               	btfsc	status,2,c
  1932  000F00  D7F6               	goto	l1743
  1933  000F02  C007  FFD9         	movff	atoi@s,fsr2l
  1934  000F06  C008  FFDA         	movff	atoi@s+1,fsr2h
  1935  000F0A  0E09               	movlw	9
  1936  000F0C  18DE               	xorwf	postinc2,w,c
  1937  000F0E  B4D8               	btfsc	status,2,c
  1938  000F10  D7EE               	goto	l1743
  1939  000F12  0E00               	movlw	0
  1940  000F14  6E0D               	movwf	atoi@a+1,c
  1941  000F16  0E00               	movlw	0
  1942  000F18  6E0C               	movwf	atoi@a,c
  1943  000F1A  0E00               	movlw	0
  1944  000F1C  6E0B               	movwf	atoi@sign,c
  1945  000F1E  C007  FFD9         	movff	atoi@s,fsr2l
  1946  000F22  C008  FFDA         	movff	atoi@s+1,fsr2h
  1947  000F26  0E2D               	movlw	45
  1948  000F28  18DE               	xorwf	postinc2,w,c
  1949  000F2A  A4D8               	btfss	status,2,c
  1950  000F2C  D002               	goto	l1755
  1951  000F2E  2A0B               	incf	atoi@sign,f,c
  1952  000F30  D024               	goto	l1761
  1953  000F32                     l1755:
  1954  000F32  C007  FFD9         	movff	atoi@s,fsr2l
  1955  000F36  C008  FFDA         	movff	atoi@s+1,fsr2h
  1956  000F3A  0E2B               	movlw	43
  1957  000F3C  18DE               	xorwf	postinc2,w,c
  1958  000F3E  A4D8               	btfss	status,2,c
  1959  000F40  D01E               	goto	l1763
  1960  000F42  D01B               	goto	l1761
  1961  000F44                     l1759:
  1962  000F44  C00C  F001         	movff	atoi@a,___wmul@multiplier
  1963  000F48  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  1964  000F4C  0E00               	movlw	0
  1965  000F4E  6E04               	movwf	___wmul@multiplicand+1,c
  1966  000F50  0E0A               	movlw	10
  1967  000F52  6E03               	movwf	___wmul@multiplicand,c
  1968  000F54  EC3D  F00A         	call	___wmul	;wreg free
  1969  000F58  C007  FFD9         	movff	atoi@s,fsr2l
  1970  000F5C  C008  FFDA         	movff	atoi@s+1,fsr2h
  1971  000F60  50DF               	movf	indf2,w,c
  1972  000F62  6E09               	movwf	??_atoi& (0+255),c
  1973  000F64  6A0A               	clrf	(??_atoi+1)& (0+255),c
  1974  000F66  5001               	movf	?___wmul,w,c
  1975  000F68  2609               	addwf	??_atoi,f,c
  1976  000F6A  5002               	movf	?___wmul+1,w,c
  1977  000F6C  220A               	addwfc	??_atoi+1,f,c
  1978  000F6E  0ED0               	movlw	208
  1979  000F70  2409               	addwf	??_atoi,w,c
  1980  000F72  6E0C               	movwf	atoi@a,c
  1981  000F74  0EFF               	movlw	255
  1982  000F76  200A               	addwfc	??_atoi+1,w,c
  1983  000F78  6E0D               	movwf	atoi@a+1,c
  1984  000F7A                     l1761:
  1985  000F7A  4A07               	infsnz	atoi@s,f,c
  1986  000F7C  2A08               	incf	atoi@s+1,f,c
  1987  000F7E                     l1763:
  1988  000F7E  C007  FFD9         	movff	atoi@s,fsr2l
  1989  000F82  C008  FFDA         	movff	atoi@s+1,fsr2h
  1990  000F86  50DF               	movf	indf2,w,c
  1991  000F88  EC60  F00A         	call	_isdigit
  1992  000F8C  B0D8               	btfsc	status,0,c
  1993  000F8E  D7DA               	goto	l1759
  1994  000F90  500B               	movf	atoi@sign,w,c
  1995  000F92  B4D8               	btfsc	status,2,c
  1996  000F94  D00D               	goto	l412
  1997  000F96  C00C  F009         	movff	atoi@a,??_atoi
  1998  000F9A  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  1999  000F9E  1E09               	comf	??_atoi,f,c
  2000  000FA0  1E0A               	comf	??_atoi+1,f,c
  2001  000FA2  4A09               	infsnz	??_atoi,f,c
  2002  000FA4  2A0A               	incf	??_atoi+1,f,c
  2003  000FA6  C009  F007         	movff	??_atoi,?_atoi
  2004  000FAA  C00A  F008         	movff	??_atoi+1,?_atoi+1
  2005  000FAE  0012               	return	
  2006  000FB0                     l412:
  2007  000FB0  C00C  F007         	movff	atoi@a,?_atoi
  2008  000FB4  C00D  F008         	movff	atoi@a+1,?_atoi+1
  2009  000FB8  0012               	return		;funcret
  2010  000FBA                     __end_of_atoi:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           prodh	equ	0xFF4
  2017                           prodl	equ	0xFF3
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf2	equ	0xFDF
  2021                           postinc2	equ	0xFDE
  2022                           postdec2	equ	0xFDD
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _isdigit *****************
  2028 ;; Defined at:
  2029 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  c               1    wreg     unsigned char 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  c               1    2[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2046 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        3 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_atoi
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057  0014C0                     __ptext8:
  2058                           	opt stack 0
  2059  0014C0                     _isdigit:
  2060                           	opt stack 27
  2061                           
  2062                           ;incstack = 0
  2063                           ;isdigit@c stored from wreg
  2064  0014C0  6E03               	movwf	isdigit@c,c
  2065  0014C2  0E00               	movlw	0
  2066  0014C4  6E02               	movwf	_isdigit$833,c
  2067  0014C6  0E3A               	movlw	58
  2068  0014C8  6003               	cpfslt	isdigit@c,c
  2069  0014CA  D005               	goto	l1609
  2070  0014CC  0E2F               	movlw	47
  2071  0014CE  6403               	cpfsgt	isdigit@c,c
  2072  0014D0  D002               	goto	l1609
  2073  0014D2  0E01               	movlw	1
  2074  0014D4  6E02               	movwf	_isdigit$833,c
  2075  0014D6                     l1609:
  2076  0014D6  C002  F001         	movff	_isdigit$833,??_isdigit
  2077  0014DA  3001               	rrcf	??_isdigit,w,c
  2078  0014DC  0012               	return	
  2079  0014DE                     __end_of_isdigit:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function ___wmul *****************
  2097 ;; Defined at:
  2098 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  multiplier      2    0[COMRAM] unsigned int 
  2101 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  product         2    4[COMRAM] unsigned int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2    0[COMRAM] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, prodl, prodh
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         4       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        6 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_atoi
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text9
  2127  00147A                     __ptext9:
  2128                           	opt stack 0
  2129  00147A                     ___wmul:
  2130                           	opt stack 27
  2131                           
  2132                           ;incstack = 0
  2133  00147A  5001               	movf	___wmul@multiplier,w,c
  2134  00147C  0203               	mulwf	___wmul@multiplicand,c
  2135  00147E  CFF3 F005          	movff	prodl,___wmul@product
  2136  001482  CFF4 F006          	movff	prodh,___wmul@product+1
  2137  001486  5001               	movf	___wmul@multiplier,w,c
  2138  001488  0204               	mulwf	___wmul@multiplicand+1,c
  2139  00148A  50F3               	movf	prodl,w,c
  2140  00148C  2606               	addwf	___wmul@product+1,f,c
  2141  00148E  5002               	movf	___wmul@multiplier+1,w,c
  2142  001490  0203               	mulwf	___wmul@multiplicand,c
  2143  001492  50F3               	movf	prodl,w,c
  2144  001494  2606               	addwf	___wmul@product+1,f,c
  2145  001496  C005  F001         	movff	___wmul@product,?___wmul
  2146  00149A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2147  00149E  0012               	return	
  2148  0014A0                     __end_of___wmul:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf2	equ	0xFDF
  2159                           postinc2	equ	0xFDE
  2160                           postdec2	equ	0xFDD
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _LCD_puts *****************
  2166 ;; Defined at:
  2167 ;;		line 93 in file "i2c_lcd.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  addr            1    wreg     unsigned char 
  2170 ;;  s               2    9[COMRAM] PTR unsigned char 
  2171 ;;		 -> riksFactors@text(80), STR_6(27), STR_5(16), STR_4(15), 
  2172 ;;		 -> STR_3(20), STR_2(18), STR_1(12), keyNumber@arreglo(20), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  addr            1   13[COMRAM] unsigned char 
  2175 ;;  i               2   11[COMRAM] int 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        5 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    4
  2192 ;; This function calls:
  2193 ;;		_LCD_putch
  2194 ;; This function is called by:
  2195 ;;		_keyNumber
  2196 ;;		_riksFactors
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text10
  2201  00127C                     __ptext10:
  2202                           	opt stack 0
  2203  00127C                     _LCD_puts:
  2204                           	opt stack 24
  2205                           
  2206                           ;incstack = 0
  2207                           ;LCD_puts@addr stored from wreg
  2208  00127C  6E0E               	movwf	LCD_puts@addr,c
  2209                           
  2210                           ;i2c_lcd.c: 95: int i=0;
  2211  00127E  0E00               	movlw	0
  2212  001280  6E0D               	movwf	LCD_puts@i+1,c
  2213  001282  0E00               	movlw	0
  2214  001284  6E0C               	movwf	LCD_puts@i,c
  2215                           
  2216                           ;i2c_lcd.c: 96: while(*s != 0) LCD_putch(addr, *s++);
  2217  001286  D016               	goto	l1739
  2218  001288                     l1735:
  2219  001288  C00A  FFF6         	movff	LCD_puts@s,tblptrl
  2220  00128C  C00B  FFF7         	movff	LCD_puts@s+1,tblptrh
  2221  001290  6AF8               	clrf	tblptru,c
  2222  001292  0E07               	movlw	(high __ramtop+-1)
  2223  001294  64F7               	cpfsgt	tblptrh,c
  2224  001296  D003               	bra	u1197
  2225  001298  0008               	tblrd		*
  2226  00129A  50F5               	movf	tablat,w,c
  2227  00129C  D005               	bra	u1190
  2228  00129E                     u1197:
  2229  00129E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2230  0012A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2231  0012A6  50EF               	movf	indf0,w,c
  2232  0012A8                     u1190:
  2233  0012A8  6E07               	movwf	LCD_putch@data,c
  2234  0012AA  500E               	movf	LCD_puts@addr,w,c
  2235  0012AC  ECCA  F009         	call	_LCD_putch
  2236  0012B0  4A0A               	infsnz	LCD_puts@s,f,c
  2237  0012B2  2A0B               	incf	LCD_puts@s+1,f,c
  2238  0012B4                     l1739:
  2239  0012B4  C00A  FFF6         	movff	LCD_puts@s,tblptrl
  2240  0012B8  C00B  FFF7         	movff	LCD_puts@s+1,tblptrh
  2241  0012BC  6AF8               	clrf	tblptru,c
  2242  0012BE  0E07               	movlw	(high __ramtop+-1)
  2243  0012C0  64F7               	cpfsgt	tblptrh,c
  2244  0012C2  D003               	bra	u1207
  2245  0012C4  0008               	tblrd		*
  2246  0012C6  50F5               	movf	tablat,w,c
  2247  0012C8  D005               	bra	u1200
  2248  0012CA                     u1207:
  2249  0012CA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2250  0012CE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2251  0012D2  50EF               	movf	indf0,w,c
  2252  0012D4                     u1200:
  2253  0012D4  0900               	iorlw	0
  2254  0012D6  B4D8               	btfsc	status,2,c
  2255  0012D8  0012               	return	
  2256  0012DA  D7D6               	goto	l1735
  2257  0012DC                     __end_of_LCD_puts:
  2258                           	opt stack 0
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           prodh	equ	0xFF4
  2264                           prodl	equ	0xFF3
  2265                           indf0	equ	0xFEF
  2266                           postinc0	equ	0xFEE
  2267                           fsr0h	equ	0xFEA
  2268                           fsr0l	equ	0xFE9
  2269                           wreg	equ	0xFE8
  2270                           indf2	equ	0xFDF
  2271                           postinc2	equ	0xFDE
  2272                           postdec2	equ	0xFDD
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _LCD_putch *****************
  2278 ;; Defined at:
  2279 ;;		line 50 in file "i2c_lcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  addr            1    wreg     unsigned char 
  2282 ;;  data            1    6[COMRAM] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  addr            1    7[COMRAM] unsigned char 
  2285 ;;  lcddata         1    8[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         1       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        3 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    3
  2302 ;; This function calls:
  2303 ;;		_I2C_PCF8574_Write
  2304 ;; This function is called by:
  2305 ;;		_LCD_puts
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text11
  2310  001394                     __ptext11:
  2311                           	opt stack 0
  2312  001394                     _LCD_putch:
  2313                           	opt stack 24
  2314                           
  2315                           ;incstack = 0
  2316                           ;LCD_putch@addr stored from wreg
  2317  001394  6E08               	movwf	LCD_putch@addr,c
  2318                           
  2319                           ;i2c_lcd.c: 52: unsigned char lcddata;
  2320                           ;i2c_lcd.c: 53: lcddata = (data & 0xF0)|0x08|0x01;
  2321  001396  5007               	movf	LCD_putch@data,w,c
  2322  001398  0BF0               	andlw	240
  2323  00139A  0909               	iorlw	9
  2324  00139C  6E09               	movwf	LCD_putch@lcddata,c
  2325                           
  2326                           ;i2c_lcd.c: 54: I2C_PCF8574_Write(addr,lcddata | 0x04);
  2327  00139E  5009               	movf	LCD_putch@lcddata,w,c
  2328  0013A0  0904               	iorlw	4
  2329  0013A2  6E03               	movwf	I2C_PCF8574_Write@value,c
  2330  0013A4  5008               	movf	LCD_putch@addr,w,c
  2331  0013A6  EC50  F00A         	call	_I2C_PCF8574_Write
  2332                           
  2333                           ;i2c_lcd.c: 55: I2C_PCF8574_Write(addr,lcddata & ~0x04);
  2334  0013AA  5009               	movf	LCD_putch@lcddata,w,c
  2335  0013AC  0BFB               	andlw	251
  2336  0013AE  6E03               	movwf	I2C_PCF8574_Write@value,c
  2337  0013B0  5008               	movf	LCD_putch@addr,w,c
  2338  0013B2  EC50  F00A         	call	_I2C_PCF8574_Write
  2339                           
  2340                           ;i2c_lcd.c: 56: lcddata = ((data << 4) & 0xF0)|0x08|0x01;
  2341  0013B6  3807               	swapf	LCD_putch@data,w,c
  2342  0013B8  0BF0               	andlw	240
  2343  0013BA  0BF0               	andlw	240
  2344  0013BC  0909               	iorlw	9
  2345  0013BE  6E09               	movwf	LCD_putch@lcddata,c
  2346                           
  2347                           ;i2c_lcd.c: 57: I2C_PCF8574_Write(addr,lcddata | 0x04);
  2348  0013C0  5009               	movf	LCD_putch@lcddata,w,c
  2349  0013C2  0904               	iorlw	4
  2350  0013C4  6E03               	movwf	I2C_PCF8574_Write@value,c
  2351  0013C6  5008               	movf	LCD_putch@addr,w,c
  2352  0013C8  EC50  F00A         	call	_I2C_PCF8574_Write
  2353                           
  2354                           ;i2c_lcd.c: 58: I2C_PCF8574_Write(addr,lcddata & ~0x04);
  2355  0013CC  5009               	movf	LCD_putch@lcddata,w,c
  2356  0013CE  0BFB               	andlw	251
  2357  0013D0  6E03               	movwf	I2C_PCF8574_Write@value,c
  2358  0013D2  5008               	movf	LCD_putch@addr,w,c
  2359  0013D4  EC50  F00A         	call	_I2C_PCF8574_Write
  2360  0013D8  0012               	return		;funcret
  2361  0013DA                     __end_of_LCD_putch:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           prodh	equ	0xFF4
  2368                           prodl	equ	0xFF3
  2369                           indf0	equ	0xFEF
  2370                           postinc0	equ	0xFEE
  2371                           fsr0h	equ	0xFEA
  2372                           fsr0l	equ	0xFE9
  2373                           wreg	equ	0xFE8
  2374                           indf2	equ	0xFDF
  2375                           postinc2	equ	0xFDE
  2376                           postdec2	equ	0xFDD
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function _LCD_goto *****************
  2382 ;; Defined at:
  2383 ;;		line 80 in file "i2c_lcd.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  addr            1    wreg     unsigned char 
  2386 ;;  row             1   11[COMRAM] unsigned char 
  2387 ;;  column          1   12[COMRAM] unsigned char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  addr            1   13[COMRAM] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2399 ;;      Params:         2       0       0       0       0       0       0       0       0
  2400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2402 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2403 ;;Total ram usage:        3 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		_LCD_putcmd
  2408 ;; This function is called by:
  2409 ;;		_keyNumber
  2410 ;;		_riksFactors
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text12
  2415  00119C                     __ptext12:
  2416                           	opt stack 0
  2417  00119C                     _LCD_goto:
  2418                           	opt stack 24
  2419                           
  2420                           ;incstack = 0
  2421                           ;LCD_goto@addr stored from wreg
  2422  00119C  6E0E               	movwf	LCD_goto@addr,c
  2423                           
  2424                           ;i2c_lcd.c: 81: switch(row){
  2425  00119E  D02D               	goto	l1731
  2426  0011A0                     l1719:
  2427  0011A0  500D               	movf	LCD_goto@column,w,c
  2428  0011A2  0F7F               	addlw	127
  2429  0011A4  6E07               	movwf	LCD_putcmd@data,c
  2430  0011A6  0E01               	movlw	1
  2431  0011A8  6E08               	movwf	LCD_putcmd@cmdtype,c
  2432  0011AA  500E               	movf	LCD_goto@addr,w,c
  2433  0011AC  EC9D  F009         	call	_LCD_putcmd
  2434  0011B0  0012               	return	
  2435  0011B2                     l1721:
  2436  0011B2  500D               	movf	LCD_goto@column,w,c
  2437  0011B4  0FBF               	addlw	191
  2438  0011B6  6E07               	movwf	LCD_putcmd@data,c
  2439  0011B8  0E01               	movlw	1
  2440  0011BA  6E08               	movwf	LCD_putcmd@cmdtype,c
  2441  0011BC  500E               	movf	LCD_goto@addr,w,c
  2442  0011BE  EC9D  F009         	call	_LCD_putcmd
  2443  0011C2  0012               	return	
  2444  0011C4                     l1723:
  2445  0011C4  500D               	movf	LCD_goto@column,w,c
  2446  0011C6  0F93               	addlw	147
  2447  0011C8  6E07               	movwf	LCD_putcmd@data,c
  2448  0011CA  0E01               	movlw	1
  2449  0011CC  6E08               	movwf	LCD_putcmd@cmdtype,c
  2450  0011CE  500E               	movf	LCD_goto@addr,w,c
  2451  0011D0  EC9D  F009         	call	_LCD_putcmd
  2452  0011D4  0012               	return	
  2453  0011D6                     l1725:
  2454  0011D6  500D               	movf	LCD_goto@column,w,c
  2455  0011D8  0FD3               	addlw	211
  2456  0011DA  6E07               	movwf	LCD_putcmd@data,c
  2457  0011DC  0E01               	movlw	1
  2458  0011DE  6E08               	movwf	LCD_putcmd@cmdtype,c
  2459  0011E0  500E               	movf	LCD_goto@addr,w,c
  2460  0011E2  EC9D  F009         	call	_LCD_putcmd
  2461  0011E6  0012               	return	
  2462  0011E8                     l1727:
  2463  0011E8  500D               	movf	LCD_goto@column,w,c
  2464  0011EA  0F7F               	addlw	127
  2465  0011EC  6E07               	movwf	LCD_putcmd@data,c
  2466  0011EE  0E01               	movlw	1
  2467  0011F0  6E08               	movwf	LCD_putcmd@cmdtype,c
  2468  0011F2  500E               	movf	LCD_goto@addr,w,c
  2469  0011F4  EC9D  F009         	call	_LCD_putcmd
  2470                           
  2471                           ;i2c_lcd.c: 87: }
  2472  0011F8  0012               	return	
  2473  0011FA                     l1731:
  2474  0011FA  500C               	movf	LCD_goto@row,w,c
  2475                           
  2476                           ; Switch size 1, requested type "space"
  2477                           ; Number of cases is 4, Range of values is 1 to 4
  2478                           ; switch strategies available:
  2479                           ; Name         Instructions Cycles
  2480                           ; simple_byte           13     7 (average)
  2481                           ;	Chosen strategy is simple_byte
  2482  0011FC  0A01               	xorlw	1	; case 1
  2483  0011FE  B4D8               	btfsc	status,2,c
  2484  001200  D7CF               	goto	l1719
  2485  001202  0A03               	xorlw	3	; case 2
  2486  001204  B4D8               	btfsc	status,2,c
  2487  001206  D7D5               	goto	l1721
  2488  001208  0A01               	xorlw	1	; case 3
  2489  00120A  B4D8               	btfsc	status,2,c
  2490  00120C  D7DB               	goto	l1723
  2491  00120E  0A07               	xorlw	7	; case 4
  2492  001210  B4D8               	btfsc	status,2,c
  2493  001212  D7E1               	goto	l1725
  2494  001214  D7E9               	goto	l1727
  2495  001216                     __end_of_LCD_goto:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           indf0	equ	0xFEF
  2504                           postinc0	equ	0xFEE
  2505                           fsr0h	equ	0xFEA
  2506                           fsr0l	equ	0xFE9
  2507                           wreg	equ	0xFE8
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           postdec2	equ	0xFDD
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _KP_Readbutton *****************
  2516 ;; Defined at:
  2517 ;;		line 30 in file "KeyPad Library.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  key             1    8[COMRAM] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      unsigned char 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0
  2532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2534 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2535 ;;Total ram usage:        1 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    1
  2538 ;; This function calls:
  2539 ;;		_KP_scan
  2540 ;; This function is called by:
  2541 ;;		_keyNumber
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text13
  2546  000CB0                     __ptext13:
  2547                           	opt stack 0
  2548  000CB0                     _KP_Readbutton:
  2549                           	opt stack 27
  2550                           
  2551                           ;KeyPad Library.c: 32: char key = ',';
  2552                           
  2553                           ;incstack = 0
  2554  000CB0  0E2C               	movlw	44
  2555  000CB2  6E09               	movwf	KP_Readbutton@key,c
  2556                           
  2557                           ;KeyPad Library.c: 33: while(!((key = KP_scan()) == ','))
  2558  000CB4  D08F               	goto	l1711
  2559  000CB6                     l1615:
  2560                           
  2561                           ;KeyPad Library.c: 34: {
  2562                           ;KeyPad Library.c: 35: if(keynum == 1) { return key = '7'; }
  2563  000CB6  0441               	decf	_keynum,w,c
  2564  000CB8  1042               	iorwf	_keynum+1,w,c
  2565  000CBA  A4D8               	btfss	status,2,c
  2566  000CBC  D004               	goto	l1621
  2567  000CBE  0E37               	movlw	55
  2568  000CC0  6E09               	movwf	KP_Readbutton@key,c
  2569  000CC2  5009               	movf	KP_Readbutton@key,w,c
  2570  000CC4  0012               	return	
  2571  000CC6                     l1621:
  2572                           
  2573                           ;KeyPad Library.c: 36: if(keynum == 2) { return key = '8'; }
  2574  000CC6  0E02               	movlw	2
  2575  000CC8  1841               	xorwf	_keynum,w,c
  2576  000CCA  1042               	iorwf	_keynum+1,w,c
  2577  000CCC  A4D8               	btfss	status,2,c
  2578  000CCE  D004               	goto	l1627
  2579  000CD0  0E38               	movlw	56
  2580  000CD2  6E09               	movwf	KP_Readbutton@key,c
  2581  000CD4  5009               	movf	KP_Readbutton@key,w,c
  2582  000CD6  0012               	return	
  2583  000CD8                     l1627:
  2584                           
  2585                           ;KeyPad Library.c: 37: if(keynum == 3) { return key = '9'; }
  2586  000CD8  0E03               	movlw	3
  2587  000CDA  1841               	xorwf	_keynum,w,c
  2588  000CDC  1042               	iorwf	_keynum+1,w,c
  2589  000CDE  A4D8               	btfss	status,2,c
  2590  000CE0  D004               	goto	l1633
  2591  000CE2  0E39               	movlw	57
  2592  000CE4  6E09               	movwf	KP_Readbutton@key,c
  2593  000CE6  5009               	movf	KP_Readbutton@key,w,c
  2594  000CE8  0012               	return	
  2595  000CEA                     l1633:
  2596                           
  2597                           ;KeyPad Library.c: 38: if(keynum == 4) { return key = '/'; }
  2598  000CEA  0E04               	movlw	4
  2599  000CEC  1841               	xorwf	_keynum,w,c
  2600  000CEE  1042               	iorwf	_keynum+1,w,c
  2601  000CF0  A4D8               	btfss	status,2,c
  2602  000CF2  D004               	goto	l1639
  2603  000CF4  0E2F               	movlw	47
  2604  000CF6  6E09               	movwf	KP_Readbutton@key,c
  2605  000CF8  5009               	movf	KP_Readbutton@key,w,c
  2606  000CFA  0012               	return	
  2607  000CFC                     l1639:
  2608                           
  2609                           ;KeyPad Library.c: 39: if(keynum == 5) { return key = '4'; }
  2610  000CFC  0E05               	movlw	5
  2611  000CFE  1841               	xorwf	_keynum,w,c
  2612  000D00  1042               	iorwf	_keynum+1,w,c
  2613  000D02  A4D8               	btfss	status,2,c
  2614  000D04  D004               	goto	l1645
  2615  000D06  0E34               	movlw	52
  2616  000D08  6E09               	movwf	KP_Readbutton@key,c
  2617  000D0A  5009               	movf	KP_Readbutton@key,w,c
  2618  000D0C  0012               	return	
  2619  000D0E                     l1645:
  2620                           
  2621                           ;KeyPad Library.c: 40: if(keynum == 6) { return key = '5'; }
  2622  000D0E  0E06               	movlw	6
  2623  000D10  1841               	xorwf	_keynum,w,c
  2624  000D12  1042               	iorwf	_keynum+1,w,c
  2625  000D14  A4D8               	btfss	status,2,c
  2626  000D16  D004               	goto	l1651
  2627  000D18  0E35               	movlw	53
  2628  000D1A  6E09               	movwf	KP_Readbutton@key,c
  2629  000D1C  5009               	movf	KP_Readbutton@key,w,c
  2630  000D1E  0012               	return	
  2631  000D20                     l1651:
  2632                           
  2633                           ;KeyPad Library.c: 41: if(keynum == 7) { return key = '6'; }
  2634  000D20  0E07               	movlw	7
  2635  000D22  1841               	xorwf	_keynum,w,c
  2636  000D24  1042               	iorwf	_keynum+1,w,c
  2637  000D26  A4D8               	btfss	status,2,c
  2638  000D28  D004               	goto	l1657
  2639  000D2A  0E36               	movlw	54
  2640  000D2C  6E09               	movwf	KP_Readbutton@key,c
  2641  000D2E  5009               	movf	KP_Readbutton@key,w,c
  2642  000D30  0012               	return	
  2643  000D32                     l1657:
  2644                           
  2645                           ;KeyPad Library.c: 42: if(keynum == 8) { return key = '*'; }
  2646  000D32  0E08               	movlw	8
  2647  000D34  1841               	xorwf	_keynum,w,c
  2648  000D36  1042               	iorwf	_keynum+1,w,c
  2649  000D38  A4D8               	btfss	status,2,c
  2650  000D3A  D004               	goto	l1663
  2651  000D3C  0E2A               	movlw	42
  2652  000D3E  6E09               	movwf	KP_Readbutton@key,c
  2653  000D40  5009               	movf	KP_Readbutton@key,w,c
  2654  000D42  0012               	return	
  2655  000D44                     l1663:
  2656                           
  2657                           ;KeyPad Library.c: 43: if(keynum == 9) { return key = '1'; }
  2658  000D44  0E09               	movlw	9
  2659  000D46  1841               	xorwf	_keynum,w,c
  2660  000D48  1042               	iorwf	_keynum+1,w,c
  2661  000D4A  A4D8               	btfss	status,2,c
  2662  000D4C  D004               	goto	l1669
  2663  000D4E  0E31               	movlw	49
  2664  000D50  6E09               	movwf	KP_Readbutton@key,c
  2665  000D52  5009               	movf	KP_Readbutton@key,w,c
  2666  000D54  0012               	return	
  2667  000D56                     l1669:
  2668                           
  2669                           ;KeyPad Library.c: 44: if(keynum == 10){ return key = '2';}
  2670  000D56  0E0A               	movlw	10
  2671  000D58  1841               	xorwf	_keynum,w,c
  2672  000D5A  1042               	iorwf	_keynum+1,w,c
  2673  000D5C  A4D8               	btfss	status,2,c
  2674  000D5E  D004               	goto	l1675
  2675  000D60  0E32               	movlw	50
  2676  000D62  6E09               	movwf	KP_Readbutton@key,c
  2677  000D64  5009               	movf	KP_Readbutton@key,w,c
  2678  000D66  0012               	return	
  2679  000D68                     l1675:
  2680                           
  2681                           ;KeyPad Library.c: 45: if(keynum == 11){ return key = '3';}
  2682  000D68  0E0B               	movlw	11
  2683  000D6A  1841               	xorwf	_keynum,w,c
  2684  000D6C  1042               	iorwf	_keynum+1,w,c
  2685  000D6E  A4D8               	btfss	status,2,c
  2686  000D70  D004               	goto	l1681
  2687  000D72  0E33               	movlw	51
  2688  000D74  6E09               	movwf	KP_Readbutton@key,c
  2689  000D76  5009               	movf	KP_Readbutton@key,w,c
  2690  000D78  0012               	return	
  2691  000D7A                     l1681:
  2692                           
  2693                           ;KeyPad Library.c: 46: if(keynum == 12){ return key = '-';}
  2694  000D7A  0E0C               	movlw	12
  2695  000D7C  1841               	xorwf	_keynum,w,c
  2696  000D7E  1042               	iorwf	_keynum+1,w,c
  2697  000D80  A4D8               	btfss	status,2,c
  2698  000D82  D004               	goto	l1687
  2699  000D84  0E2D               	movlw	45
  2700  000D86  6E09               	movwf	KP_Readbutton@key,c
  2701  000D88  5009               	movf	KP_Readbutton@key,w,c
  2702  000D8A  0012               	return	
  2703  000D8C                     l1687:
  2704                           
  2705                           ;KeyPad Library.c: 47: if(keynum == 13){ return key = 'd';}
  2706  000D8C  0E0D               	movlw	13
  2707  000D8E  1841               	xorwf	_keynum,w,c
  2708  000D90  1042               	iorwf	_keynum+1,w,c
  2709  000D92  A4D8               	btfss	status,2,c
  2710  000D94  D004               	goto	l1693
  2711  000D96  0E64               	movlw	100
  2712  000D98  6E09               	movwf	KP_Readbutton@key,c
  2713  000D9A  5009               	movf	KP_Readbutton@key,w,c
  2714  000D9C  0012               	return	
  2715  000D9E                     l1693:
  2716                           
  2717                           ;KeyPad Library.c: 48: if(keynum == 14){ return key = '0';}
  2718  000D9E  0E0E               	movlw	14
  2719  000DA0  1841               	xorwf	_keynum,w,c
  2720  000DA2  1042               	iorwf	_keynum+1,w,c
  2721  000DA4  A4D8               	btfss	status,2,c
  2722  000DA6  D004               	goto	l1699
  2723  000DA8  0E30               	movlw	48
  2724  000DAA  6E09               	movwf	KP_Readbutton@key,c
  2725  000DAC  5009               	movf	KP_Readbutton@key,w,c
  2726  000DAE  0012               	return	
  2727  000DB0                     l1699:
  2728                           
  2729                           ;KeyPad Library.c: 49: if(keynum == 15){ return key = '=';}
  2730  000DB0  0E0F               	movlw	15
  2731  000DB2  1841               	xorwf	_keynum,w,c
  2732  000DB4  1042               	iorwf	_keynum+1,w,c
  2733  000DB6  A4D8               	btfss	status,2,c
  2734  000DB8  D004               	goto	l1705
  2735  000DBA  0E3D               	movlw	61
  2736  000DBC  6E09               	movwf	KP_Readbutton@key,c
  2737  000DBE  5009               	movf	KP_Readbutton@key,w,c
  2738  000DC0  0012               	return	
  2739  000DC2                     l1705:
  2740                           
  2741                           ;KeyPad Library.c: 50: if(keynum == 16){ return key = '+';}
  2742  000DC2  0E10               	movlw	16
  2743  000DC4  1841               	xorwf	_keynum,w,c
  2744  000DC6  1042               	iorwf	_keynum+1,w,c
  2745  000DC8  A4D8               	btfss	status,2,c
  2746  000DCA  D004               	goto	l1711
  2747  000DCC  0E2B               	movlw	43
  2748  000DCE  6E09               	movwf	KP_Readbutton@key,c
  2749  000DD0  5009               	movf	KP_Readbutton@key,w,c
  2750  000DD2  0012               	return	
  2751  000DD4                     l1711:
  2752  000DD4  ECF4  F006         	call	_KP_scan	;wreg free
  2753  000DD8  5001               	movf	?_KP_scan,w,c
  2754  000DDA  6E09               	movwf	KP_Readbutton@key,c
  2755  000DDC  0E2C               	movlw	44
  2756  000DDE  1809               	xorwf	KP_Readbutton@key,w,c
  2757  000DE0  A4D8               	btfss	status,2,c
  2758  000DE2  D769               	goto	l1615
  2759                           
  2760                           ;KeyPad Library.c: 51: }
  2761                           ;KeyPad Library.c: 52: return key;
  2762  000DE4  5009               	movf	KP_Readbutton@key,w,c
  2763  000DE6  0012               	return	
  2764  000DE8                     __end_of_KP_Readbutton:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           indf0	equ	0xFEF
  2773                           postinc0	equ	0xFEE
  2774                           fsr0h	equ	0xFEA
  2775                           fsr0l	equ	0xFE9
  2776                           wreg	equ	0xFE8
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _KP_scan *****************
  2785 ;; Defined at:
  2786 ;;		line 12 in file "KeyPad Library.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  row             2    6[COMRAM] short 
  2791 ;;  press           2    4[COMRAM] short 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    0[COMRAM] int 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         2       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        8 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_KP_Readbutton
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text14
  2815  000DE8                     __ptext14:
  2816                           	opt stack 0
  2817  000DE8                     _KP_scan:
  2818                           	opt stack 27
  2819                           
  2820                           ;KeyPad Library.c: 14: short row,press = 0;
  2821                           
  2822                           ;incstack = 0
  2823  000DE8  0E00               	movlw	0
  2824  000DEA  6E06               	movwf	KP_scan@press+1,c
  2825  000DEC  0E00               	movlw	0
  2826  000DEE  6E05               	movwf	KP_scan@press,c
  2827                           
  2828                           ;KeyPad Library.c: 15: keynum = 0;
  2829  000DF0  0E00               	movlw	0
  2830  000DF2  6E42               	movwf	_keynum+1,c
  2831  000DF4  0E00               	movlw	0
  2832  000DF6  6E41               	movwf	_keynum,c
  2833                           
  2834                           ;KeyPad Library.c: 16: for(row = 0; row < 4; row++)
  2835  000DF8  0E00               	movlw	0
  2836  000DFA  6E08               	movwf	KP_scan@row+1,c
  2837  000DFC  0E00               	movlw	0
  2838  000DFE  6E07               	movwf	KP_scan@row,c
  2839  000E00  BE08               	btfsc	KP_scan@row+1,7,c
  2840  000E02  D006               	goto	l1517
  2841  000E04  5008               	movf	KP_scan@row+1,w,c
  2842  000E06  E169               	bnz	l1565
  2843  000E08  0E04               	movlw	4
  2844  000E0A  5C07               	subwf	KP_scan@row,w,c
  2845  000E0C  B0D8               	btfsc	status,0,c
  2846  000E0E  D065               	goto	l1565
  2847  000E10                     l1517:
  2848                           
  2849                           ;KeyPad Library.c: 17: {
  2850                           ;KeyPad Library.c: 18: LATD = (0x10<<row);
  2851  000E10  C007  F003         	movff	KP_scan@row,??_KP_scan
  2852  000E14  0E10               	movlw	16
  2853  000E16  6E04               	movwf	(??_KP_scan+1)& (0+255),c
  2854  000E18  2A03               	incf	??_KP_scan,f,c
  2855  000E1A  D002               	goto	u884
  2856  000E1C                     u885:
  2857  000E1C  90D8               	bcf	status,0,c
  2858  000E1E  3604               	rlcf	??_KP_scan+1,f,c
  2859  000E20                     u884:
  2860  000E20  2E03               	decfsz	??_KP_scan,f,c
  2861  000E22  D7FC               	goto	u885
  2862  000E24  5004               	movf	??_KP_scan+1,w,c
  2863  000E26  6E8C               	movwf	3980,c	;volatile
  2864                           
  2865                           ;KeyPad Library.c: 20: if(PORTDbits.RD0 == 1){ _delay((unsigned long)((800)*(20000000/40
      +                          00000.0))); while(PORTDbits.RD0 == 1); return keynum+=1; press = 1;}
  2866  000E28  A083               	btfss	3971,0,c	;volatile
  2867  000E2A  D011               	goto	l1529
  2868  000E2C  0E06               	movlw	6
  2869  000E2E  6E03               	movwf	??_KP_scan& (0+255),c
  2870  000E30  0E30               	movlw	48
  2871  000E32                     u1457:
  2872  000E32  2EE8               	decfsz	wreg,f,c
  2873  000E34  D7FE               	bra	u1457
  2874  000E36  2E03               	decfsz	??_KP_scan& (0+255),f,c
  2875  000E38  D7FC               	bra	u1457
  2876  000E3A  D000               	nop2	
  2877  000E3C                     l19:
  2878  000E3C  B083               	btfsc	3971,0,c	;volatile
  2879  000E3E  D7FE               	goto	l19
  2880  000E40  4A41               	infsnz	_keynum,f,c
  2881  000E42  2A42               	incf	_keynum+1,f,c
  2882  000E44  C041  F001         	movff	_keynum,?_KP_scan
  2883  000E48  C042  F002         	movff	_keynum+1,?_KP_scan+1
  2884  000E4C  0012               	return	
  2885  000E4E                     l1529:
  2886                           
  2887                           ;KeyPad Library.c: 21: if(PORTDbits.RD1 == 1){ _delay((unsigned long)((800)*(20000000/40
      +                          00000.0))); while(PORTDbits.RD1 == 1); return keynum+=2; press = 1;}
  2888  000E4E  A283               	btfss	3971,1,c	;volatile
  2889  000E50  D013               	goto	l1539
  2890  000E52  0E06               	movlw	6
  2891  000E54  6E03               	movwf	??_KP_scan& (0+255),c
  2892  000E56  0E30               	movlw	48
  2893  000E58                     u1467:
  2894  000E58  2EE8               	decfsz	wreg,f,c
  2895  000E5A  D7FE               	bra	u1467
  2896  000E5C  2E03               	decfsz	??_KP_scan& (0+255),f,c
  2897  000E5E  D7FC               	bra	u1467
  2898  000E60  D000               	nop2	
  2899  000E62                     l24:
  2900  000E62  B283               	btfsc	3971,1,c	;volatile
  2901  000E64  D7FE               	goto	l24
  2902  000E66  0E02               	movlw	2
  2903  000E68  2641               	addwf	_keynum,f,c
  2904  000E6A  0E00               	movlw	0
  2905  000E6C  2242               	addwfc	_keynum+1,f,c
  2906  000E6E  C041  F001         	movff	_keynum,?_KP_scan
  2907  000E72  C042  F002         	movff	_keynum+1,?_KP_scan+1
  2908  000E76  0012               	return	
  2909  000E78                     l1539:
  2910                           
  2911                           ;KeyPad Library.c: 22: if(PORTDbits.RD2 == 1){ _delay((unsigned long)((800)*(20000000/40
      +                          00000.0))); while(PORTDbits.RD2 == 1); return keynum+=3; press = 1;}
  2912  000E78  A483               	btfss	3971,2,c	;volatile
  2913  000E7A  D013               	goto	l1549
  2914  000E7C  0E06               	movlw	6
  2915  000E7E  6E03               	movwf	??_KP_scan& (0+255),c
  2916  000E80  0E30               	movlw	48
  2917  000E82                     u1477:
  2918  000E82  2EE8               	decfsz	wreg,f,c
  2919  000E84  D7FE               	bra	u1477
  2920  000E86  2E03               	decfsz	??_KP_scan& (0+255),f,c
  2921  000E88  D7FC               	bra	u1477
  2922  000E8A  D000               	nop2	
  2923  000E8C                     l28:
  2924  000E8C  B483               	btfsc	3971,2,c	;volatile
  2925  000E8E  D7FE               	goto	l28
  2926  000E90  0E03               	movlw	3
  2927  000E92  2641               	addwf	_keynum,f,c
  2928  000E94  0E00               	movlw	0
  2929  000E96  2242               	addwfc	_keynum+1,f,c
  2930  000E98  C041  F001         	movff	_keynum,?_KP_scan
  2931  000E9C  C042  F002         	movff	_keynum+1,?_KP_scan+1
  2932  000EA0  0012               	return	
  2933  000EA2                     l1549:
  2934                           
  2935                           ;KeyPad Library.c: 23: if(PORTDbits.RD3 == 1){ _delay((unsigned long)((800)*(20000000/40
      +                          00000.0))); while(PORTDbits.RD3 == 1); return keynum+=4; press = 1;}
  2936  000EA2  A683               	btfss	3971,3,c	;volatile
  2937  000EA4  D013               	goto	l1559
  2938  000EA6  0E06               	movlw	6
  2939  000EA8  6E03               	movwf	??_KP_scan& (0+255),c
  2940  000EAA  0E30               	movlw	48
  2941  000EAC                     u1487:
  2942  000EAC  2EE8               	decfsz	wreg,f,c
  2943  000EAE  D7FE               	bra	u1487
  2944  000EB0  2E03               	decfsz	??_KP_scan& (0+255),f,c
  2945  000EB2  D7FC               	bra	u1487
  2946  000EB4  D000               	nop2	
  2947  000EB6                     l32:
  2948  000EB6  B683               	btfsc	3971,3,c	;volatile
  2949  000EB8  D7FE               	goto	l32
  2950  000EBA  0E04               	movlw	4
  2951  000EBC  2641               	addwf	_keynum,f,c
  2952  000EBE  0E00               	movlw	0
  2953  000EC0  2242               	addwfc	_keynum+1,f,c
  2954  000EC2  C041  F001         	movff	_keynum,?_KP_scan
  2955  000EC6  C042  F002         	movff	_keynum+1,?_KP_scan+1
  2956  000ECA  0012               	return	
  2957  000ECC                     l1559:
  2958                           
  2959                           ;KeyPad Library.c: 25: keynum +=4;
  2960  000ECC  0E04               	movlw	4
  2961  000ECE  2641               	addwf	_keynum,f,c
  2962  000ED0  0E00               	movlw	0
  2963  000ED2  2242               	addwfc	_keynum+1,f,c
  2964  000ED4  4A07               	infsnz	KP_scan@row,f,c
  2965  000ED6  2A08               	incf	KP_scan@row+1,f,c
  2966  000ED8  D793               	goto	L3
  2967  000EDA                     l1565:
  2968                           
  2969                           ;KeyPad Library.c: 26: }
  2970                           ;KeyPad Library.c: 27: if(press == 0) keynum = 0;
  2971  000EDA  5005               	movf	KP_scan@press,w,c
  2972  000EDC  1006               	iorwf	KP_scan@press+1,w,c
  2973  000EDE  A4D8               	btfss	status,2,c
  2974  000EE0  0012               	return	
  2975  000EE2  0E00               	movlw	0
  2976  000EE4  6E42               	movwf	_keynum+1,c
  2977  000EE6  0E00               	movlw	0
  2978  000EE8  6E41               	movwf	_keynum,c
  2979  000EEA  0012               	return	
  2980  000EEC                     __end_of_KP_scan:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodh	equ	0xFF4
  2987                           prodl	equ	0xFF3
  2988                           indf0	equ	0xFEF
  2989                           postinc0	equ	0xFEE
  2990                           fsr0h	equ	0xFEA
  2991                           fsr0l	equ	0xFE9
  2992                           wreg	equ	0xFE8
  2993                           indf2	equ	0xFDF
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _longDelay *****************
  3001 ;; Defined at:
  3002 ;;		line 17 in file "main.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  time            2    0[COMRAM] int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  i               2    3[COMRAM] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3016 ;;      Params:         2       0       0       0       0       0       0       0       0
  3017 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3018 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3019 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3020 ;;Total ram usage:        5 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text15
  3030  00141A                     __ptext15:
  3031                           	opt stack 0
  3032  00141A                     _longDelay:
  3033                           	opt stack 30
  3034                           
  3035                           ;main.c: 18: for (int i = 0 ; i < time; i++) _delay((unsigned long)((50)*(4000000/4000.0
      +                          )));
  3036                           
  3037                           ;incstack = 0
  3038  00141A  0E00               	movlw	0
  3039  00141C  6E05               	movwf	longDelay@i+1,c
  3040  00141E  0E00               	movlw	0
  3041  001420  6E04               	movwf	longDelay@i,c
  3042  001422  D00A               	goto	l124
  3043  001424                     l1923:
  3044  001424  0E41               	movlw	65
  3045  001426  6E03               	movwf	??_longDelay& (0+255),c
  3046  001428  0EEE               	movlw	238
  3047  00142A                     u1497:
  3048  00142A  2EE8               	decfsz	wreg,f,c
  3049  00142C  D7FE               	bra	u1497
  3050  00142E  2E03               	decfsz	??_longDelay& (0+255),f,c
  3051  001430  D7FC               	bra	u1497
  3052  001432  D000               	nop2	
  3053  001434  4A04               	infsnz	longDelay@i,f,c
  3054  001436  2A05               	incf	longDelay@i+1,f,c
  3055  001438                     l124:
  3056  001438  5001               	movf	longDelay@time,w,c
  3057  00143A  5C04               	subwf	longDelay@i,w,c
  3058  00143C  5005               	movf	longDelay@i+1,w,c
  3059  00143E  0A80               	xorlw	128
  3060  001440  6E03               	movwf	??_longDelay& (0+255),c
  3061  001442  5002               	movf	longDelay@time+1,w,c
  3062  001444  0A80               	xorlw	128
  3063  001446  5803               	subwfb	??_longDelay& (0+255),w,c
  3064  001448  B0D8               	btfsc	status,0,c
  3065  00144A  0012               	return	
  3066  00144C  D7EB               	goto	l1923
  3067  00144E                     __end_of_longDelay:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           prodh	equ	0xFF4
  3074                           prodl	equ	0xFF3
  3075                           indf0	equ	0xFEF
  3076                           postinc0	equ	0xFEE
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           indf2	equ	0xFDF
  3081                           postinc2	equ	0xFDE
  3082                           postdec2	equ	0xFDD
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _OpenI2C *****************
  3088 ;; Defined at:
  3089 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\i2c\i2c_open.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  sync_mode       1    wreg     unsigned char 
  3092 ;;  slew            1    0[COMRAM] unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3104 ;;      Params:         1       0       0       0       0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text16
  3118  0014DE                     __ptext16:
  3119                           	opt stack 0
  3120  0014DE                     _OpenI2C:
  3121                           	opt stack 30
  3122                           
  3123                           ;incstack = 0
  3124                           ;OpenI2C@sync_mode stored from wreg
  3125  0014DE  6E02               	movwf	OpenI2C@sync_mode,c
  3126  0014E0  0E3F               	movlw	63
  3127  0014E2  16C7               	andwf	4039,f,c	;volatile
  3128  0014E4  0E00               	movlw	0
  3129  0014E6  6EC6               	movwf	4038,c	;volatile
  3130  0014E8  0E00               	movlw	0
  3131  0014EA  6EC5               	movwf	4037,c	;volatile
  3132  0014EC  5002               	movf	OpenI2C@sync_mode,w,c
  3133  0014EE  12C6               	iorwf	4038,f,c	;volatile
  3134  0014F0  5001               	movf	OpenI2C@slew,w,c
  3135  0014F2  12C7               	iorwf	4039,f,c	;volatile
  3136  0014F4  8293               	bsf	3987,1,c	;volatile
  3137  0014F6  8093               	bsf	3987,0,c	;volatile
  3138  0014F8  8AC6               	bsf	4038,5,c	;volatile
  3139  0014FA  0012               	return		;funcret
  3140  0014FC                     __end_of_OpenI2C:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           indf0	equ	0xFEF
  3149                           postinc0	equ	0xFEE
  3150                           fsr0h	equ	0xFEA
  3151                           fsr0l	equ	0xFE9
  3152                           wreg	equ	0xFE8
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _LCD_init *****************
  3161 ;; Defined at:
  3162 ;;		line 63 in file "i2c_lcd.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  addr            1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  addr            1   12[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3178 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3179 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_LCD_putcmd
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text17
  3191  001078                     __ptext17:
  3192                           	opt stack 0
  3193  001078                     _LCD_init:
  3194                           	opt stack 26
  3195                           
  3196                           ;incstack = 0
  3197                           ;LCD_init@addr stored from wreg
  3198  001078  6E0D               	movwf	LCD_init@addr,c
  3199                           
  3200                           ;i2c_lcd.c: 65: _delay((unsigned long)((20)*(4000000/4000.0)));
  3201  00107A  0E1A               	movlw	26
  3202  00107C  6E0C               	movwf	??_LCD_init& (0+255),c
  3203  00107E  0EF8               	movlw	248
  3204  001080                     u1507:
  3205  001080  2EE8               	decfsz	wreg,f,c
  3206  001082  D7FE               	bra	u1507
  3207  001084  2E0C               	decfsz	??_LCD_init& (0+255),f,c
  3208  001086  D7FC               	bra	u1507
  3209  001088  D000               	nop2	
  3210                           
  3211                           ;i2c_lcd.c: 67: LCD_putcmd(addr, 0x30,0);_delay((unsigned long)((5)*(4000000/4000.0)));
  3212  00108A  0E30               	movlw	48
  3213  00108C  6E07               	movwf	LCD_putcmd@data,c
  3214  00108E  0E00               	movlw	0
  3215  001090  6E08               	movwf	LCD_putcmd@cmdtype,c
  3216  001092  500D               	movf	LCD_init@addr,w,c
  3217  001094  EC9D  F009         	call	_LCD_putcmd
  3218  001098  0E07               	movlw	7
  3219  00109A  6E0C               	movwf	??_LCD_init& (0+255),c
  3220  00109C  0E7D               	movlw	125
  3221  00109E                     u1517:
  3222  00109E  2EE8               	decfsz	wreg,f,c
  3223  0010A0  D7FE               	bra	u1517
  3224  0010A2  2E0C               	decfsz	??_LCD_init& (0+255),f,c
  3225  0010A4  D7FC               	bra	u1517
  3226  0010A6  F000               	nop	
  3227                           
  3228                           ;i2c_lcd.c: 68: LCD_putcmd(addr, 0x30,0);
  3229  0010A8  0E30               	movlw	48
  3230  0010AA  6E07               	movwf	LCD_putcmd@data,c
  3231  0010AC  0E00               	movlw	0
  3232  0010AE  6E08               	movwf	LCD_putcmd@cmdtype,c
  3233  0010B0  500D               	movf	LCD_init@addr,w,c
  3234  0010B2  EC9D  F009         	call	_LCD_putcmd
  3235                           
  3236                           ;i2c_lcd.c: 69: LCD_putcmd(addr, 0x30,0);
  3237  0010B6  0E30               	movlw	48
  3238  0010B8  6E07               	movwf	LCD_putcmd@data,c
  3239  0010BA  0E00               	movlw	0
  3240  0010BC  6E08               	movwf	LCD_putcmd@cmdtype,c
  3241  0010BE  500D               	movf	LCD_init@addr,w,c
  3242  0010C0  EC9D  F009         	call	_LCD_putcmd
  3243                           
  3244                           ;i2c_lcd.c: 70: LCD_putcmd(addr, 0x20,0);
  3245  0010C4  0E20               	movlw	32
  3246  0010C6  6E07               	movwf	LCD_putcmd@data,c
  3247  0010C8  0E00               	movlw	0
  3248  0010CA  6E08               	movwf	LCD_putcmd@cmdtype,c
  3249  0010CC  500D               	movf	LCD_init@addr,w,c
  3250  0010CE  EC9D  F009         	call	_LCD_putcmd
  3251                           
  3252                           ;i2c_lcd.c: 71: LCD_putcmd(addr, 0x28,1);
  3253  0010D2  0E28               	movlw	40
  3254  0010D4  6E07               	movwf	LCD_putcmd@data,c
  3255  0010D6  0E01               	movlw	1
  3256  0010D8  6E08               	movwf	LCD_putcmd@cmdtype,c
  3257  0010DA  500D               	movf	LCD_init@addr,w,c
  3258  0010DC  EC9D  F009         	call	_LCD_putcmd
  3259                           
  3260                           ;i2c_lcd.c: 72: LCD_putcmd(addr, 0x08,1);
  3261  0010E0  0E08               	movlw	8
  3262  0010E2  6E07               	movwf	LCD_putcmd@data,c
  3263  0010E4  0E01               	movlw	1
  3264  0010E6  6E08               	movwf	LCD_putcmd@cmdtype,c
  3265  0010E8  500D               	movf	LCD_init@addr,w,c
  3266  0010EA  EC9D  F009         	call	_LCD_putcmd
  3267                           
  3268                           ;i2c_lcd.c: 73: LCD_putcmd(addr, 0x01,1);
  3269  0010EE  0E01               	movlw	1
  3270  0010F0  6E07               	movwf	LCD_putcmd@data,c
  3271  0010F2  0E01               	movlw	1
  3272  0010F4  6E08               	movwf	LCD_putcmd@cmdtype,c
  3273  0010F6  500D               	movf	LCD_init@addr,w,c
  3274  0010F8  EC9D  F009         	call	_LCD_putcmd
  3275                           
  3276                           ;i2c_lcd.c: 74: LCD_putcmd(addr, 0x06,1);
  3277  0010FC  0E06               	movlw	6
  3278  0010FE  6E07               	movwf	LCD_putcmd@data,c
  3279  001100  0E01               	movlw	1
  3280  001102  6E08               	movwf	LCD_putcmd@cmdtype,c
  3281  001104  500D               	movf	LCD_init@addr,w,c
  3282  001106  EC9D  F009         	call	_LCD_putcmd
  3283                           
  3284                           ;i2c_lcd.c: 75: LCD_putcmd(addr, 0x0c,1);
  3285  00110A  0E0C               	movlw	12
  3286  00110C  6E07               	movwf	LCD_putcmd@data,c
  3287  00110E  0E01               	movlw	1
  3288  001110  6E08               	movwf	LCD_putcmd@cmdtype,c
  3289  001112  500D               	movf	LCD_init@addr,w,c
  3290  001114  EC9D  F009         	call	_LCD_putcmd
  3291  001118  0012               	return		;funcret
  3292  00111A                     __end_of_LCD_init:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           indf0	equ	0xFEF
  3301                           postinc0	equ	0xFEE
  3302                           fsr0h	equ	0xFEA
  3303                           fsr0l	equ	0xFE9
  3304                           wreg	equ	0xFE8
  3305                           indf2	equ	0xFDF
  3306                           postinc2	equ	0xFDE
  3307                           postdec2	equ	0xFDD
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _LCD_putcmd *****************
  3313 ;; Defined at:
  3314 ;;		line 29 in file "i2c_lcd.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  addr            1    wreg     unsigned char 
  3317 ;;  data            1    6[COMRAM] unsigned char 
  3318 ;;  cmdtype         1    7[COMRAM] unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  addr            1    9[COMRAM] unsigned char 
  3321 ;;  lcddata         1   10[COMRAM] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3331 ;;      Params:         2       0       0       0       0       0       0       0       0
  3332 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3333 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3334 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3335 ;;Total ram usage:        5 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    3
  3338 ;; This function calls:
  3339 ;;		_I2C_PCF8574_Write
  3340 ;; This function is called by:
  3341 ;;		_LCD_init
  3342 ;;		_LCD_goto
  3343 ;;		_main
  3344 ;;		_lcdClear
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text18
  3349  00133A                     __ptext18:
  3350                           	opt stack 0
  3351  00133A                     _LCD_putcmd:
  3352                           	opt stack 25
  3353                           
  3354                           ;incstack = 0
  3355                           ;LCD_putcmd@addr stored from wreg
  3356  00133A  6E0A               	movwf	LCD_putcmd@addr,c
  3357                           
  3358                           ;i2c_lcd.c: 31: unsigned char lcddata;
  3359                           ;i2c_lcd.c: 34: lcddata = (data & 0xF0)|0x08;
  3360  00133C  5007               	movf	LCD_putcmd@data,w,c
  3361  00133E  0BF0               	andlw	240
  3362  001340  0908               	iorlw	8
  3363  001342  6E0B               	movwf	LCD_putcmd@lcddata,c
  3364                           
  3365                           ;i2c_lcd.c: 35: I2C_PCF8574_Write(addr,lcddata | 0x04);
  3366  001344  500B               	movf	LCD_putcmd@lcddata,w,c
  3367  001346  0904               	iorlw	4
  3368  001348  6E03               	movwf	I2C_PCF8574_Write@value,c
  3369  00134A  500A               	movf	LCD_putcmd@addr,w,c
  3370  00134C  EC50  F00A         	call	_I2C_PCF8574_Write
  3371                           
  3372                           ;i2c_lcd.c: 36: I2C_PCF8574_Write(addr,lcddata & ~0x04);
  3373  001350  500B               	movf	LCD_putcmd@lcddata,w,c
  3374  001352  0BFB               	andlw	251
  3375  001354  6E03               	movwf	I2C_PCF8574_Write@value,c
  3376  001356  500A               	movf	LCD_putcmd@addr,w,c
  3377  001358  EC50  F00A         	call	_I2C_PCF8574_Write
  3378                           
  3379                           ;i2c_lcd.c: 39: if (cmdtype) {
  3380  00135C  5008               	movf	LCD_putcmd@cmdtype,w,c
  3381  00135E  B4D8               	btfsc	status,2,c
  3382  001360  D011               	goto	l1583
  3383                           
  3384                           ;i2c_lcd.c: 41: lcddata = ((data << 4) & 0xF0)|0x08;
  3385  001362  3807               	swapf	LCD_putcmd@data,w,c
  3386  001364  0BF0               	andlw	240
  3387  001366  0BF0               	andlw	240
  3388  001368  0908               	iorlw	8
  3389  00136A  6E0B               	movwf	LCD_putcmd@lcddata,c
  3390                           
  3391                           ;i2c_lcd.c: 42: I2C_PCF8574_Write(addr,lcddata | 0x04);
  3392  00136C  500B               	movf	LCD_putcmd@lcddata,w,c
  3393  00136E  0904               	iorlw	4
  3394  001370  6E03               	movwf	I2C_PCF8574_Write@value,c
  3395  001372  500A               	movf	LCD_putcmd@addr,w,c
  3396  001374  EC50  F00A         	call	_I2C_PCF8574_Write
  3397                           
  3398                           ;i2c_lcd.c: 43: I2C_PCF8574_Write(addr,lcddata & ~0x04);
  3399  001378  500B               	movf	LCD_putcmd@lcddata,w,c
  3400  00137A  0BFB               	andlw	251
  3401  00137C  6E03               	movwf	I2C_PCF8574_Write@value,c
  3402  00137E  500A               	movf	LCD_putcmd@addr,w,c
  3403  001380  EC50  F00A         	call	_I2C_PCF8574_Write
  3404  001384                     l1583:
  3405                           
  3406                           ;i2c_lcd.c: 44: }
  3407                           ;i2c_lcd.c: 45: _delay((unsigned long)((2)*(4000000/4000.0)));
  3408  001384  0E03               	movlw	3
  3409  001386  6E09               	movwf	??_LCD_putcmd& (0+255),c
  3410  001388  0E98               	movlw	152
  3411  00138A                     u1527:
  3412  00138A  2EE8               	decfsz	wreg,f,c
  3413  00138C  D7FE               	bra	u1527
  3414  00138E  2E09               	decfsz	??_LCD_putcmd& (0+255),f,c
  3415  001390  D7FC               	bra	u1527
  3416  001392  0012               	return		;funcret
  3417  001394                     __end_of_LCD_putcmd:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           prodh	equ	0xFF4
  3424                           prodl	equ	0xFF3
  3425                           indf0	equ	0xFEF
  3426                           postinc0	equ	0xFEE
  3427                           fsr0h	equ	0xFEA
  3428                           fsr0l	equ	0xFE9
  3429                           wreg	equ	0xFE8
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           postdec2	equ	0xFDD
  3433                           fsr2h	equ	0xFDA
  3434                           fsr2l	equ	0xFD9
  3435                           status	equ	0xFD8
  3436                           
  3437 ;; *************** function _I2C_PCF8574_Write *****************
  3438 ;; Defined at:
  3439 ;;		line 12 in file "i2c_lcd.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  addr            1    wreg     unsigned char 
  3442 ;;  value           1    2[COMRAM] unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  addr            1    5[COMRAM] unsigned char 
  3445 ;;  S               1    4[COMRAM] unsigned char 
  3446 ;;  dummy           1    3[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      unsigned char 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         1       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:        4 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		_WriteI2C
  3465 ;; This function is called by:
  3466 ;;		_LCD_putcmd
  3467 ;;		_LCD_putch
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text19
  3472  0014A0                     __ptext19:
  3473                           	opt stack 0
  3474  0014A0                     _I2C_PCF8574_Write:
  3475                           	opt stack 25
  3476                           
  3477                           ;incstack = 0
  3478                           ;I2C_PCF8574_Write@addr stored from wreg
  3479  0014A0  6E06               	movwf	I2C_PCF8574_Write@addr,c
  3480                           
  3481                           ;i2c_lcd.c: 14: unsigned char S,dummy;
  3482                           ;i2c_lcd.c: 15: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3483  0014A2  80C5               	bsf	4037,0,c	;volatile
  3484  0014A4                     l70:
  3485  0014A4  B0C5               	btfsc	4037,0,c	;volatile
  3486  0014A6  D7FE               	goto	l70
  3487                           
  3488                           ;i2c_lcd.c: 16: S = WriteI2C( addr );
  3489  0014A8  5006               	movf	I2C_PCF8574_Write@addr,w,c
  3490  0014AA  EC6E  F009         	call	_WriteI2C
  3491  0014AE  6E05               	movwf	I2C_PCF8574_Write@S,c
  3492                           
  3493                           ;i2c_lcd.c: 21: }
  3494                           ;i2c_lcd.c: 22: S = WriteI2C(value);
  3495                           
  3496                           ;i2c_lcd.c: 20: SSPCON1bits.WCOL=0;
  3497                           
  3498                           ;i2c_lcd.c: 18: {
  3499                           ;i2c_lcd.c: 19: dummy = SSPBUF;
  3500                           
  3501                           ;i2c_lcd.c: 17: if(S == -1)
  3502  0014B0  5003               	movf	I2C_PCF8574_Write@value,w,c
  3503  0014B2  EC6E  F009         	call	_WriteI2C
  3504  0014B6  6E05               	movwf	I2C_PCF8574_Write@S,c
  3505                           
  3506                           ;i2c_lcd.c: 23: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3507  0014B8  84C5               	bsf	4037,2,c	;volatile
  3508  0014BA                     l74:
  3509  0014BA  A4C5               	btfss	4037,2,c	;volatile
  3510  0014BC  0012               	return	
  3511  0014BE  D7FD               	goto	l74
  3512  0014C0                     __end_of_I2C_PCF8574_Write:
  3513                           	opt stack 0
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           prodh	equ	0xFF4
  3519                           prodl	equ	0xFF3
  3520                           indf0	equ	0xFEF
  3521                           postinc0	equ	0xFEE
  3522                           fsr0h	equ	0xFEA
  3523                           fsr0l	equ	0xFE9
  3524                           wreg	equ	0xFE8
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _WriteI2C *****************
  3533 ;; Defined at:
  3534 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\i2c\i2c_writ.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  data_out        1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  data_out        1    1[COMRAM] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      char 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    1
  3555 ;; This function calls:
  3556 ;;		_IdleI2C
  3557 ;; This function is called by:
  3558 ;;		_I2C_PCF8574_Write
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text20
  3563  0012DC                     __ptext20:
  3564                           	opt stack 0
  3565  0012DC                     _WriteI2C:
  3566                           	opt stack 25
  3567                           
  3568                           ;incstack = 0
  3569                           ;WriteI2C@data_out stored from wreg
  3570  0012DC  6E02               	movwf	WriteI2C@data_out,c
  3571  0012DE  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3572  0012E2  AEC6               	btfss	4038,7,c	;volatile
  3573  0012E4  D002               	goto	l1465
  3574  0012E6  0EFF               	movlw	255
  3575  0012E8  0012               	return	
  3576  0012EA                     l1465:
  3577  0012EA  50C6               	movf	4038,w,c	;volatile
  3578  0012EC  0B0F               	andlw	15
  3579  0012EE  0A08               	xorlw	8
  3580  0012F0  B4D8               	btfsc	status,2,c
  3581  0012F2  D00F               	goto	l1483
  3582  0012F4  50C6               	movf	4038,w,c	;volatile
  3583  0012F6  0B0F               	andlw	15
  3584  0012F8  0A0B               	xorlw	11
  3585  0012FA  B4D8               	btfsc	status,2,c
  3586  0012FC  D00A               	goto	l1483
  3587  0012FE  88C6               	bsf	4038,4,c	;volatile
  3588  001300                     l226:
  3589  001300  A69E               	btfss	3998,3,c	;volatile
  3590  001302  D7FE               	goto	l226
  3591  001304  A4C7               	btfss	4039,2,c	;volatile
  3592  001306  B0C7               	btfsc	4039,0,c	;volatile
  3593  001308  D002               	goto	l1479
  3594  00130A  0EFE               	movlw	254
  3595  00130C  0012               	return	
  3596  00130E                     l1479:
  3597  00130E  0E00               	movlw	0
  3598  001310  0012               	return	
  3599  001312                     l1483:
  3600  001312  50C6               	movf	4038,w,c	;volatile
  3601  001314  0B0F               	andlw	15
  3602  001316  0A08               	xorlw	8
  3603  001318  B4D8               	btfsc	status,2,c
  3604  00131A  D005               	goto	l235
  3605  00131C  50C6               	movf	4038,w,c	;volatile
  3606  00131E  0B0F               	andlw	15
  3607  001320  0A0B               	xorlw	11
  3608  001322  A4D8               	btfss	status,2,c
  3609  001324  0012               	return	
  3610  001326                     l235:
  3611  001326  B0C7               	btfsc	4039,0,c	;volatile
  3612  001328  D7FE               	goto	l235
  3613  00132A  EC7E  F00A         	call	_IdleI2C	;wreg free
  3614  00132E  ACC5               	btfss	4037,6,c	;volatile
  3615  001330  D002               	goto	l1497
  3616  001332  0EFE               	movlw	254
  3617  001334  0012               	return	
  3618  001336                     l1497:
  3619  001336  0E00               	movlw	0
  3620  001338  0012               	return	
  3621  00133A                     __end_of_WriteI2C:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           indf0	equ	0xFEF
  3630                           postinc0	equ	0xFEE
  3631                           fsr0h	equ	0xFEA
  3632                           fsr0l	equ	0xFE9
  3633                           wreg	equ	0xFE8
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _IdleI2C *****************
  3642 ;; Defined at:
  3643 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\i2c\i2c_idle.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3659 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3660 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3661 ;;Total ram usage:        1 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_WriteI2C
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text21
  3671  0014FC                     __ptext21:
  3672                           	opt stack 0
  3673  0014FC                     _IdleI2C:
  3674                           	opt stack 25
  3675  0014FC                     l1451:
  3676  0014FC  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  3677  001500  0E1F               	movlw	31
  3678  001502  1601               	andwf	??_IdleI2C,f,c
  3679  001504  A4D8               	btfss	status,2,c
  3680  001506  D7FA               	goto	l1451
  3681  001508  A4C7               	btfss	4039,2,c	;volatile
  3682  00150A  0012               	return	
  3683  00150C  D7F7               	goto	l1451
  3684  00150E                     __end_of_IdleI2C:
  3685                           	opt stack 0
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           prodh	equ	0xFF4
  3691                           prodl	equ	0xFF3
  3692                           indf0	equ	0xFEF
  3693                           postinc0	equ	0xFEE
  3694                           fsr0h	equ	0xFEA
  3695                           fsr0l	equ	0xFE9
  3696                           wreg	equ	0xFE8
  3697                           indf2	equ	0xFDF
  3698                           postinc2	equ	0xFDE
  3699                           postdec2	equ	0xFDD
  3700                           fsr2h	equ	0xFDA
  3701                           fsr2l	equ	0xFD9
  3702                           status	equ	0xFD8
  3703                           
  3704 ;; *************** function _KP_init *****************
  3705 ;; Defined at:
  3706 ;;		line 6 in file "KeyPad Library.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text22
  3734  00151E                     __ptext22:
  3735                           	opt stack 0
  3736  00151E                     _KP_init:
  3737                           	opt stack 30
  3738                           
  3739                           ;KeyPad Library.c: 8: TRISD = 0x0F;
  3740                           
  3741                           ;incstack = 0
  3742  00151E  0E0F               	movlw	15
  3743  001520  6E95               	movwf	3989,c	;volatile
  3744                           
  3745                           ;KeyPad Library.c: 9: LATD = 0x00;
  3746  001522  0E00               	movlw	0
  3747  001524  6E8C               	movwf	3980,c	;volatile
  3748  001526  0012               	return		;funcret
  3749  001528                     __end_of_KP_init:
  3750                           	opt stack 0
  3751                           tblptru	equ	0xFF8
  3752                           tblptrh	equ	0xFF7
  3753                           tblptrl	equ	0xFF6
  3754                           tablat	equ	0xFF5
  3755                           prodh	equ	0xFF4
  3756                           prodl	equ	0xFF3
  3757                           indf0	equ	0xFEF
  3758                           postinc0	equ	0xFEE
  3759                           fsr0h	equ	0xFEA
  3760                           fsr0l	equ	0xFE9
  3761                           wreg	equ	0xFE8
  3762                           indf2	equ	0xFDF
  3763                           postinc2	equ	0xFDE
  3764                           postdec2	equ	0xFDD
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           indf0	equ	0xFEF
  3775                           postinc0	equ	0xFEE
  3776                           fsr0h	equ	0xFEA
  3777                           fsr0l	equ	0xFE9
  3778                           wreg	equ	0xFE8
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786                           	psect	rparam
  3787  0000                     tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           indf0	equ	0xFEF
  3794                           postinc0	equ	0xFEE
  3795                           fsr0h	equ	0xFEA
  3796                           fsr0l	equ	0xFE9
  3797                           wreg	equ	0xFE8
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    40
    Data        1
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      67
    BANK0           160    112     112
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> keyNumber@arreglo(COMRAM[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_7(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> riksFactors@text(BANK0[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_puts@s	PTR unsigned char  size(2) Largest target is 80
		 -> riksFactors@text(BANK0[80]), STR_6(CODE[27]), STR_5(CODE[16]), STR_4(CODE[15]), 
		 -> STR_3(CODE[20]), STR_2(CODE[18]), STR_1(CODE[12]), keyNumber@arreglo(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _riksFactors->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _lcdClear->_LCD_putcmd
    _keyNumber->_LCD_goto
    _keyNumber->_LCD_puts
    _atoi->___wmul
    _LCD_puts->_LCD_putch
    _LCD_putch->_I2C_PCF8574_Write
    _LCD_goto->_LCD_putcmd
    _KP_Readbutton->_KP_scan
    _LCD_init->_LCD_putcmd
    _LCD_putcmd->_I2C_PCF8574_Write
    _I2C_PCF8574_Write->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    _main->_riksFactors

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23035
                                             62 COMRAM     2     2      0
                            _KP_init
                           _LCD_init
                         _LCD_putcmd
                            _OpenI2C
                          _longDelay
                        _riksFactors
 ---------------------------------------------------------------------------------
 (1) _riksFactors                                        112   112      0   16860
                                              0 BANK0    112   112      0
                           _LCD_goto
                           _LCD_puts
                          _keyNumber
                           _lcdClear
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             49    21     28    1139
                                             22 COMRAM    40    12     28
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     287
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _lcdClear                                             0     0      0    2879
                         _LCD_putcmd
 ---------------------------------------------------------------------------------
 (2) _keyNumber                                           33    29      4    6854
                                             14 COMRAM    33    29      4
                      _KP_Readbutton
                           _LCD_goto
                           _LCD_puts
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2     647
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LCD_puts                                             5     3      2    1517
                                              9 COMRAM     5     3      2
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (4) _LCD_putch                                            3     2      1     873
                                              6 COMRAM     3     2      1
                  _I2C_PCF8574_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_goto                                             3     1      2    4273
                                             11 COMRAM     3     1      2
                         _LCD_putcmd
 ---------------------------------------------------------------------------------
 (3) _KP_Readbutton                                        1     1      0     135
                                              8 COMRAM     1     1      0
                            _KP_scan
 ---------------------------------------------------------------------------------
 (4) _KP_scan                                              8     6      2      95
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _longDelay                                            5     3      2     110
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0    3077
                                             11 COMRAM     2     2      0
                         _LCD_putcmd
 ---------------------------------------------------------------------------------
 (3) _LCD_putcmd                                           5     3      2    2879
                                              6 COMRAM     5     3      2
                  _I2C_PCF8574_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_PCF8574_Write                                    4     3      1     587
                                              2 COMRAM     4     3      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             1     1      0      22
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (6) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _KP_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _KP_init
   _LCD_init
     _LCD_putcmd
       _I2C_PCF8574_Write
         _WriteI2C
           _IdleI2C
   _LCD_putcmd
     _I2C_PCF8574_Write
       _WriteI2C
         _IdleI2C
   _OpenI2C
   _longDelay
   _riksFactors
     _LCD_goto
       _LCD_putcmd
         _I2C_PCF8574_Write
           _WriteI2C
             _IdleI2C
     _LCD_puts
       _LCD_putch
         _I2C_PCF8574_Write
           _WriteI2C
             _IdleI2C
     _keyNumber
       _KP_Readbutton
         _KP_scan
       _LCD_goto
         _LCD_putcmd
           _I2C_PCF8574_Write
             _WriteI2C
               _IdleI2C
       _LCD_puts
         _LCD_putch
           _I2C_PCF8574_Write
             _WriteI2C
               _IdleI2C
       _atoi
         ___wmul
         _isdigit
     _lcdClear
       _LCD_putcmd
         _I2C_PCF8574_Write
           _WriteI2C
             _IdleI2C
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      70       5       70.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     40      43       1       70.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103      20        0.0%
DATA                 0      0     103       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 21 18:10:51 2019

               _SSPSTATbits 000FC7                          l32 0EB6                          l24 0E62  
                        l19 0E3C                          l28 0E8C                          l70 14A4  
                        l74 14BA         ___wmul@multiplicand 0003                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l124 1438                         l226 1300  
                       l235 1326                         l412 0FB0                         l184 0B68  
                       l609 118A                         l619 126A                __CFG_CPB$OFF 000000  
              __CFG_CPD$OFF 000000                         u884 0E20                         u885 0E1C  
              __CFG_BOR$OFF 000000                         wreg 000FE8                 ?_LCD_putcmd 0007  
              __CFG_LVP$OFF 000000            KP_Readbutton@key 0009                __CFG_WDT$OFF 000000  
                      l2009 1408                        l1451 14FC                        l1517 0E10  
                      l1621 0CC6                        l1615 0CB6                        l1711 0DD4  
                      l1465 12EA                        l1529 0E4E                        l1705 0DC2  
                      l1633 0CEA                        l1721 11B2                        l1609 14D6  
                      l1483 1312                        l1539 0E78                        l1651 0D20  
                      l1627 0CD8                        l1723 11C4                        l1731 11FA  
                      l1803 125C                        l1549 0EA2                        l1565 0EDA  
                      l1645 0D0E                        l1725 11D6                        l1479 130E  
                      l1583 1384                        l1559 0ECC                        l1663 0D44  
                      l1639 0CFC                        l1727 11E8                        l1719 11A0  
                      l1735 1288                        l1743 0EEE                        l1831 102C  
                      l1497 1336                        l1681 0D7A                        l1657 0D32  
                      l1761 0F7A                        l1745 0EF2                        l1809 0FCA  
                      l1923 1424                        l1675 0D68                        l1739 12B4  
                      l1763 0F7E                        l1755 0F32                        l1819 0FEC  
                      l1851 0B30                        l1693 0D9E                        l1669 0D56  
                      l1853 0B36                        l1845 0B16                        l1687 0D8C  
                      l1759 0F44                        l1775 113C                        l1871 0BB0  
                      l1855 0B3A                        l1777 1148                        l1865 0B88  
                      l1699 0DB0                        l1787 117C                        l1779 114C  
                      l1795 1228                        l1891 0C7A                        l1883 0BE8  
                      l1859 0B40                        l1797 1234                        l1885 0BF4  
                      l1893 0C8A                        l1799 1238                        l1895 0CA2  
                      STR_1 08A1                        STR_2 0870                        STR_3 085C  
                      STR_4 0892                        STR_5 0882                        STR_6 0829  
                      STR_7 0844                        u1200 12D4                        u1207 12CA  
                      u1190 12A8                        _LATD 000F8C                        u1507 1080  
                      u1517 109E                        u1197 129E                        u1527 138A  
                      u1457 0E32                        u1467 0E58                        u1477 0E82  
                      u1487 0EAC                        u1497 142A                 main@counter 003F  
          LCD_putch@lcddata 0009                        _atoi 0EEC                        _main 13DA  
             longDelay@time 0001  __size_of_I2C_PCF8574_Write 0020                        _text 0100  
                      fsr0h 000FEA                        indf0 000FEF                        fsr2h 000FDA  
                      fsr0l 000FE9                        indf2 000FDF                        fsr2l 000FD9  
           __end_of_KP_init 1528             __end_of_KP_scan 0EEC                        prodh 000FF4  
                      prodl 000FF3                        start 0000               __CFG_IESO$OFF 000000  
           __end_of_IdleI2C 150E              LCD_goto@column 000D               __CFG_MCLRE$ON 000000  
        __size_of_LCD_putch 0046                ___param_bank 000000           riksFactors@gender 00C4  
           __end_of_OpenI2C 14FC               __CFG_PLLDIV$1 000000            __end_of_LCD_init 111A  
          __end_of_LCD_goto 1216              __CFG_CCP2MX$ON 000000            __end_of_LCD_puts 12DC  
                     ?_atoi 0007                       ?_main 0001             __end_of___lldiv 119C  
           __end_of___llmod 127C              __CFG_DEBUG$OFF 000000          I2C_PCF8574_Write@S 0005  
             __CFG_USBDIV$2 000000                       _TRISD 000F95               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000             __end_of_dpowers 0829             __end_of_isdigit 14DE  
                     atoi@a 000C                       atoi@s 0007                       tablat 000FF5  
                     status 000FD8             __end_of_sprintf 0CB0              __CFG_ICPRT$OFF 000000  
           __initialization 144E                 LCD_goto@row 000C         __size_of_LCD_putcmd 005A  
              __end_of_atoi 0FBA                __end_of_main 141A                      ??_atoi 0009  
                    ??_main 003F          riksFactors@parents 00CC               __activetblptr 000002  
         __end_of_LCD_putch 13DA            ___llmod@dividend 000E            __end_of_WriteI2C 133A  
                 ??_KP_init 0001                   ??_KP_scan 0003                ?_riksFactors 0001  
               OpenI2C@slew 0001                   ??_IdleI2C 0001                      _OSCCON 000FD3  
                    _SSPBUF 000FC9            __end_of_lcdClear 151E                   ??_OpenI2C 0002  
            __CFG_XINST$OFF 000000                KP_scan@press 0005                      ___wmul 147A  
            __CFG_STVREN$ON 000000                   ??___lldiv 0009                   ??___llmod 0016  
         LCD_putcmd@cmdtype 0008                      _keynum 0041           LCD_putcmd@lcddata 000B  
                    clear_0 1466                __pdataCOMRAM 0043                   ??_isdigit 0001  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8              keyNumber@tecla 002D                   ??_sprintf 0033  
                __accesstop 0060     __end_of__initialization 1470             __CFG_PBADEN$OFF 000000  
                 ?_LCD_init 0001                   ?_LCD_goto 000C                   ?_LCD_puts 000A  
             ___rparam_used 000001                LCD_init@addr 000D                LCD_goto@addr 000E  
           riksFactors@edad 00B8              __pcstackCOMRAM 0001             riksFactors@peso 00C0  
           riksFactors@text 0060              LCD_putcmd@addr 000A              LCD_putcmd@data 0007  
                 LCD_puts@i 000C                   LCD_puts@s 000A                ??_LCD_putcmd 0009  
       riksFactors@estatura 00BC                  __pbssBANK1 0100          __size_of_keyNumber 00BE  
              LCD_puts@addr 000E                  ??_LCD_init 000C                  ??_LCD_goto 000E  
                ??_LCD_puts 000C          __size_of_longDelay 0034       __end_of_KP_Readbutton 0DE8  
        __end_of_LCD_putcmd 1394                     ?___wmul 0001         riksFactors@systolic 00B0  
                 ?_WriteI2C 0001                   ?_lcdClear 0001                     _SSPCON1 000FC6  
                   _SSPCON2 000FC5                     _SSPSTAT 000FC7                     _KP_init 151E  
                   _KP_scan 0DE8                     _IdleI2C 14FC             __CFG_VREGEN$OFF 000000  
      __size_of_riksFactors 025E                     _OpenI2C 14DE                     __Hparam 0000  
                   __Lparam 0000                     ___lldiv 111A             __size_of___wmul 0026  
                   ___llmod 1216                __psmallconst 0800                     __pcinit 144E  
                ??_WriteI2C 0002                     __ramtop 0800                     __ptext0 13DA  
                   __ptext1 08AE                     __ptext2 0B0C                     __ptext3 1216  
                   __ptext4 111A                     __ptext5 150E                     __ptext6 0FBA  
                   __ptext7 0EEC                     __ptext8 14C0           __end_of_keyNumber 1078  
                   __ptext9 147A                     _dpowers 0801                     _isdigit 14C0  
            _LCD_01_ADDRESS 0043           __end_of_longDelay 144E                  ??_lcdClear 000C  
                   _sprintf 0B0C        end_of_initialization 1470                   _LCD_putch 1394  
             __Lmediumconst 0000             ___lldiv@divisor 0005             ___lldiv@counter 000D  
           keyNumber@number 0027                     postdec2 000FDD      I2C_PCF8574_Write@dummy 0004  
                   postinc0 000FEE                     postinc2 000FDE      I2C_PCF8574_Write@value 0003  
                 _PORTDbits 000F83                   _TRISBbits 000F93                  ?_LCD_putch 0007  
         __size_of_LCD_init 00A2           __size_of_LCD_goto 007A           __size_of_LCD_puts 0060  
          riksFactors@smoke 00C8              __end_of___wmul 14A0               __pidataCOMRAM 1528  
       start_initialization 144E        riksFactors@diastolic 00B4            WriteI2C@data_out 0002  
                keyNumber@i 002E             ___llmod@divisor 0012             ___llmod@counter 0016  
                  ??___wmul 0005            __CFG_LPT1OSC$OFF 000000           __size_of_WriteI2C 005E  
               __pbssCOMRAM 0041               LCD_putch@addr 0008               LCD_putch@data 0007  
                longDelay@i 0004               __pcstackBANK0 0060                    ?_KP_init 0001  
                  ?_KP_scan 0001           __size_of_lcdClear 0010                 ??_LCD_putch 0008  
                  ?_IdleI2C 0001                 sprintf@flag 0035                 sprintf@prec 0036  
                  ?_OpenI2C 0001                    ?___lldiv 0001                    ?___llmod 000E  
               __smallconst 0800                    ?_isdigit 0001                   _keyNumber 0FBA  
    __size_of_KP_Readbutton 0138                    ?_sprintf 0017               ??_riksFactors 003F  
                 _longDelay 141A              ___wmul@product 0005                    _LCD_init 1078  
                  _LCD_goto 119C                    _LCD_puts 127C                    _PIR1bits 000F9E  
     I2C_PCF8574_Write@addr 0006            __CFG_WDTPS$32768 000000           ___wmul@multiplier 0001  
                ?_keyNumber 000F                  ?_longDelay 0001            __size_of_KP_init 000A  
          __size_of_KP_scan 0104            OpenI2C@sync_mode 0002            __size_of_IdleI2C 0012  
       __end_of_riksFactors 0B0C                    __Hrparam 0000            __size_of_OpenI2C 001E  
                  __Lrparam 0000                  KP_scan@row 0007               _KP_Readbutton 0CB0  
          __size_of___lldiv 0082            __size_of___llmod 0066                    _WriteI2C 12DC  
               _isdigit$833 0002                  sprintf@val 0038            __size_of_isdigit 001E  
                  _lcdClear 150E                    __ptext10 127C                    __ptext11 1394  
                  __ptext20 12DC                    __ptext12 119C                    __ptext21 14FC  
                  __ptext13 0CB0                    __ptext22 151E                    __ptext14 0DE8  
                  __ptext15 141A                    __ptext16 14DE                    __ptext17 1078  
                  __ptext18 133A                    __ptext19 14A0            __size_of_sprintf 01A4  
             __size_of_atoi 00CE               __size_of_main 0040           keyNumber@contador 002B  
         _I2C_PCF8574_Write 14A0              ?_KP_Readbutton 0001          ?_I2C_PCF8574_Write 0003  
                  atoi@sign 000B         ??_I2C_PCF8574_Write 0004       __CFG_CPUDIV$OSC1_PLL2 000000  
               ??_keyNumber 0013                  _LCD_putcmd 133A                    isdigit@c 0003  
               ??_longDelay 0003                 _riksFactors 08AE                   sprintf@ap 003C  
                 sprintf@sp 0017            ___lldiv@dividend 0001   __end_of_I2C_PCF8574_Write 14C0  
          keyNumber@arreglo 0013                    sprintf@c 003E                    sprintf@f 0019  
       __CFG_FOSC$INTOSC_XT 000000            ___lldiv@quotient 0009                 _SSPCON1bits 000FC6  
               _SSPCON2bits 000FC5             ??_KP_Readbutton 0009  
